{"version":3,"sources":["utils.js","State.js","../src/lib/dom.ts","../src/lib/template.ts","../src/lib/modify-template.ts","../src/lib/directive.ts","../src/lib/part.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/template-factory.ts","../src/lib/render.ts","../src/lib/default-template-processor.ts","src/lit-html.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","components/BaseElement.js","components/Timer.js","components/TimerCard.js","components/TimerList.js","main.js"],"names":["timeToString","ms","secs","Math","floor","min","h","toString","padStart","uuidv4","replace","c","r","random","v","getTimerTime","timer","time","length","state","Date","now","timestamp","duration","max","getArrayDiff","oldArray","newArray","deletedTimers","addedTimers","lokalTimer","find","t","id","push","stateTimer","DB","onready","constructor","stateObject","dbName","storeName","version","db","initDatabase","request","window","indexedDB","open","onerror","event","console","error","target","name","message","onupgradeneeded","result","objectStore","createObjectStore","keyPath","createIndex","unique","transaction","oncomplete","bjectStore","timers","forEach","add","onsuccess","errorCode","startTransation","callback","getTimers","Promise","resolve","reject","getAll","deleteTimer","delete","addTimer","saveTimers","requestUpdate","put","currentTimer","addEventListener","e","then","dbTimers","diff","State","setState","setInterval","getState","dispatchEvent","Event","createTimer","options","title","updateTimer","timerId","getTimerById","index","indexOf","Object","assign","splice","startTimer","stopTimer","resetTimer","BaseElement","LitElement","styles","Timer","editing","update","saveTimer","editTimer","eles","shadowRoot","querySelectorAll","focus","playPauseTimer","newSecs","seconds","newMins","minutes","newHours","hours","render","mins","value","customElements","define","TimerCard","_timer","val","setAttribute","TimerList","openTimer","map","init","mainElement","toggleDrawer","getAttribute","closeDrawer","openDrawer","document","querySelector","navigator","serviceWorker","register"],"mappings":";;AoBAA,ACAA,ACAA,ACAA;;AHCA,ACAA,ACAA,ACAA;;AHCA,ACCA,AEDA,MFCMsI,SAAN,SAAwBvB,sBAAxB,CAAmC;AJHnC,ALeA,APfA,AHAA,AIAA,AGcA,AEAA,AJAA,ACIA,ALlBA,AYAA,AdAA,AkBAA,AEKE,aAAWC,MAAX,GAAoB;AjBStB,AMCA,AUZA,ACGI,ACHJ,ACAA,MDAM0B,KDGK,ICHX,SAAwB3B,ODGT,eCHf,CAAmC;AVHnC,AHeA,AEAA,AJGA,ACEA,APlBA,AkBAe,AGGb,MrBHI3E,AkBAe0E,ElBArB,CAAS,IqBGIE,IHHE,EGGb,GAAoB,IHHmBD,sBAA1B,CAAqC;AfFpD,AMAA,ATIE1E,AkBAA,AGEE,AtBNG,ECILA,OAAO,ADJOrC,EsBML,CrBFC,CAAG,AkBAFgH,MAAX,EnBJK,CmBIe,AnBJO/G,EAAtB,EAA0B,KsBMlB;AbUf,AECA,AJjBA,ACAA,AWKI,AnBJA,QAAMC,GmBIC,CnBJG,GAAGC,IAAI,CAACC,KAAL,CAAWH,EAAE,GmBIf,AnBJkB,IAAhB,IAAwB,EAArC;ACKFqC,AmBDF,AGAAQ,AvBHI,ECIFR,ImBDI2E,AGAA,CAAC5B,CvBHGhF,GoBGV,ApBHa,ECIA,CAACkC,ADJEpC,IAAI,CAACC,CoBGD0G,GGApB,CAAwB,AvBHR,CCIH,ADJc7G,ECIA,ADJE,GAAG,EAAL,GAAU,IAArB,CoBGhB,CAAgC,CGAhC,CvBH6C,CuBGD4I,CvBHxC,GuBGJ;AdaA,AElBA,AVOI,AmBAF,AGAF,AvBJI,IuBIAC,IvBJMxI,CCIDa,ADJE,GAAGhB,CoBID6G,CnBAT,CsBAJ,CvBJkB,CCIDzE,ADJEnC,EoBIjB,GAAoB,ApBJR,CAAWH,EAAE,GCIvB,ADJ0B,EAAL,GAAU,EAAV,GAAe,IAA1B,CAAV;AgBHJ,AfQI,AmBAA,ApBHA,SCGKuC,ADHG,EoBGD,CpBHGlC,CAAC,CAACC,CCGZ,GAAc,IDHJ,GAAaC,CCGvB,KmBAW,EpBHD,CAAsB,CAAtB,EAAyB,GAAzB,CAA8B,IAAGH,GAAG,CAACE,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAgC,IAAGN,IAAI,CAACK,QAAL,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC,EAA/G;AScJ,ARVI,AsBAJ,AvBHC,QoBGO,CnBACiC,AsBAAsG,KHAK/B,InBAV,EmBAiB,CnBAA,AsBArB,GAAwB,KtBApB;AACA,AsBAF,MAAI8B,GtBAGpG,OAAL,CsBAa,CAACsG,CtBAC,CAAf,UsBAE,CAAyB,QAAzB,KAAsC,MAA1C,EAAkD;AdUpD,ARTI,AsBAAC,AvBHG,IuBGHA,KtBAKtG,ADHOlC,ECGZ,GAAU,CsBAC,AvBHR,GCGH,ADHqB;AiBGzB,AhBEI,AsBDD,AvBHF,GuBCC,MtBGOmC,AsBDA,AvBHD,YCIJ,2BDJ2ClC,OAAvC,CAA+C,OAA/C,EAAwD,UAASC,CAAT,EAAY;AST5E,ARcG,AsBDCuI,AvBHF,IuBGEA,IvBHEtI,CAAC,GAAGT,EuBGI,EvBHA,CAACU,MAAL,KAAgB,EAAhB,GAAqB,CAA7B;AKMF,AkBFG,AvBJD,MKMI,ELN4BC,CAAC,GAAGH,CAAC,GKMvB,CLN2B,EKMxB,CLNmB,GKMf,ALN0BC,CAAX,GAAgBA,CAAC,EKMpC,CLNuC,CKM1D,ELNsD,GAAU,GAA9D;AiBIK,AZSP,AHLA,AIsBA,AHxBA,AYFA,AdEEgC,AsBDD,AvBJC,ECKAA,IgBFW,KjBHJ9B,CAAC,CAACP,CCKG,GAAG,IDLR,CAAW,EAAX,CAAP,QiBGsC,GAAI,MAAM,CAAC,UAAR,KACtC,MAAM,CAAC,QAAP,KAAoB,SAApB,IAAiC,MAAM,CAAC,QAAP,CAAgB,YADX,KAEtC,wBAAwB,QAAQ,CAAC,SAFK,IAGtC,aAAa,aAAa,CAAC,SAHzB;AhBGH,ADLF,GAHM,CAAP,MCQSsC,OAAO,GAAGC,MAAM,CAACC,SAAP,CAAiBC,IAAjB,CAAsB,KAAKR,MAA3B,EAAmC,KAAKE,OAAxC,CAAhB;AgBEJ,ALAA,ARHA,AmBCA,AvBJC,MiBMK,AbHA,SmBCSuG,OnBDO,CaGC,EbHE,CaGC,AMF1B,GAA6B,GNEG,EAAhC;AfEO,AELsB,AMuB7B,ATpBIpG,AsBDFiG,EAAAA,EtBCEjG,ECES,KDFF,CAACI,CsBDC,CAACwF,IrBGW,CDFrB,ECEwB,CDFNvF,IsBDpB,CtBCyB,AsBDA,CrBGQ,GDFJ,GCEH,CqBH1B,EAAmC,ErBGS,MqBH5C,KrBG0B,IACxB,MAAM,CAAC,cAAP,IAAyB,IADD,IAEvB,MAAM,CAAC,cAAP,CAA4C,yBAA5C,KACG,SAHD;AeAD,AfKN,AEVA,AE4BO,AQnBP,APLA,ACNA,ALMO,AFADC,AsBDJ,AvBJK,MiBMM,AXuBA,AHxBA,AFAPA,EsBDEhC,CvBJQJ,GGKG,CFAN,AsBDA,CjByBQ,ALxBPqC,CgBCR,AdDgB,CcCA,AMFN,CjByBQ,EAAjB,ALxBD,CAAc,CDLb,CuBIesC,AvBJO1E,EGKE,GHLxB,EAA6B,CGKC,CAAC,IAAI,CAAC,CFArC,AsBDsB6E,EtBCW3C,GEAD,EAAD,AFAO,CEAb,AFAcG,AsBDvB,CpBC+B,CoBDnD,IpBC6B,AFAQ,CEAoB,AFAPD,CEArB,CAA8B,GFAtB,CEAhC,AFAmDE,IAAnB,GAA0B,GAA3D,EAAgEJ,KAAK,CAACG,MAAN,CAAaD,KAAb,CAAmBG,OAAnF;AgBMJ,ALJI,ARJN,AE4BA,AK3BO,ARGP,AFDK,ADLD,EiBUF,GhBPE,AqBbA,CVgBS,ADHA,AXHLtC,IAAI,CWGM,EMOhB,AjBVaD,CiBUD,ANPO,IAAI,AXHL,CAACE,EiBUnB,EAA6B,ENPV,AXHjB,EWGG,GCGD,CAA+B,CKInC,EAA8C;AAC5C,ADqBJ,AJzBE,ADFF,AGKA,ACNA,AOGG,ACHD,MP4BI,AO5BDC,ENOG,GMPE,CAACiE,KNOM,KAAK,EMPpB,CP4BuB,CO5BA,EP6BrB,CAAC,OAAD,EAAkB,CCtBlB,EAAqC,EDsBrC,KAAqD;ACrBnD,ADsBA,ANPA,ATrBFvC,AsBDA1B,AvBHA,EgBgCE,Ef5BF0B,AsBDA1B,EvBHGH,EgBgCK,CAAC,ANPG,AatBP,CAACoE,CtBCC,ADJC,CiBUA,AhBNA5B,ADJCrC,IiBUG,CjBVT,IiBUK,CACF,AMRN,AvBHmB,CgBgCjB,AhBhCF,CgBgCwB,ANPtB,CAA0B,AatBP,AvBHC,ECItB,EsBDA,CP6BE,Af5BwB+B,Ce4BK,ANP7B,EAAgD,ETrBnB,Ge4B7B,Cf5BiC,Ce4BK,KAAtC,EADmD,CAEnD,yCCvBM,CAAN;AAED,ADsBC,AFxBN,AJgBE,AHpBI,ACDN,APAM,AqBEJZ,AtBNIrB,EsBMJqB,EtBNIrB,EUyBA,AHpBO,EPLH,GAAGD,CCID2B,CqBEC,CrBFC,EqBEE,AtBNE,CCIDO,ADJEhC,EUyBA,GAAG,AHpBhB,ANDgB,CMCO,ANDNmC,ADJV,IAAiBjC,ECIb,CAAaqC,CDJI,CAACpC,GAAL,CUyBM,ATrB9B,CSqB+B,GAAf,AVzBqBL,CUyBF,IVzBO,CAACM,CUyBF,CAAC,IAA1B,CAApB,EVzB2B,GAAiCN,KAAK,CAACO,QAAvD,CAAP;AgBkCA,ATvBJ,ANNI,AqBEF,ACJAmE,AvBFC,EOUH,UNNUhC,CMMV,CACI,KgBTIiC,GhBQR,CNNqB,CMOG,ENPAhD,CsBFtB,CtBEwB,AsBFTxB,CtBEUwC,IMM3B,AgBRE,EhBUE,OAFJ,EAE0B,ENRF,CAAqB,KAAKlB,SAA1B,EAAqC;AgBQ3D,ADsBE,AVLC,AQpBP,AJgBE,AHpBiB,AND8CmB,AqBI7D,ACLD,MjB0BU,AIJP,ETrB2DA,CgBQxD,AVPU,AeGVM,IhBqBW,ELzBoD,AqBIpE,CLIA,AXiBmB,ACxBJ,CNDuD,CKyBnE,AgBrBW,CLIC,APaA,AHpBiC,CeGhD,CfHe,GGoBK,EObpB,OPaF,EAAiC;AOZhC,ADsBG,AP/BC,ACsBH,AHbA,AJPG,AFFwD,AqBM3DpB,ACNH,AvBHG,GiBAkB,CAcpB,APWE,AYhBAA,EbNS,ANEA,AHLN9B,CCGmB,CAApB,CMSG,ANX8B,CAIjC,AqBII,CAACqE,AtBTC,CAAClE,IGKU,CMFC,ACsBP,AHbb,APZG,EGKmB,CMFE,ACsBR,AHbA,EPZG,CAAhB,ESGoB,CNEM,CmBI7B,AtBTwBH,COYxB,AeHwB,CbNsC,GNE3B,AHLN,CAACO,IGK3B,ImBIH,AtBTwB,EsBSe,CtBTE,CAAzC,EAA4C,EsBSC+D,CAAN,IAAW;ALMpD,ADoBI,AdzBC,AONL,AKKF,AJiBM,AHbF,ANPE,AqBIA,AtBTArE,IAAAA,EESO,AQgBP,EVzBI,CSIJ,AFQG,EPZID,CsBSDG,EbLD,ETJO,CsBSD,AtBTED,CUyBD,AHbd,CLHsB,AOLV,CCqBI,AYhBA,CfGC,CLFjB,CAAC,AONC,ATJO,CUyBW,EYhBEwE,AtBTE1E,CSKtB,EAAE,CFOJ,CGagB,AVzBa,CEU7B,AFV8BO,CUwBd,CRbf,EONU,GPKX,CFVE,CEYD,AOPG,AaIwBsE,GpBG3B,EOPoB,CPOH,EoBHI,EpBCtB,AoBDE,EpBID,CORG,IAA6B,CPQhC,GAAoB,GORmB,CPKxC,IOLiC,CPQE,IORe,UAAhD,CAFJ;APWI,AORL,ACoBK,AHbF,AJPG,AFAD,AqBKA,ACPN,AvBHK,CSCE,KCwBD,APpBO,GDQA,AKDJ,AgBTAqD,GDOGtH,EpBGM,CQYH,CHbX,CGaa,APpBO,EDQD,AKDJ,AgBTnB,CpBE2B,COoBN,CRZf,AqBVgB,ErBUM,AQYX,APpBc,CmBKN,CfErB,EeFwB,EnBLD,AmBKrB,CnBLgC,GAAG,MAAM,IAAI,UAAU,EAAlC,CAApB;Aa6BD,AdpBE,AYLR,AJcoB,AHVjB,AJNH,AYJA,AdGM,AqBKA,ACPJkH,EAAAA,GbmBE,CKpBE,CAAC,EC+BM,CdpBC,CAAC,CoBHHjH,CCPC,CP8BP,AdpBY,AqBVJ4G,KrBUU,CAAC,GoBHF,GAAG,ACPxB,CAAyB,CDOrB,GpBGE,CaXR,GACI,AQAF,CRA0B,CQAS,GRAjC,EAAiC,CQAnC,GRAE,KAAsD,IAD1D;AEWE,ADqBG,AJ1BH,AVMM,AQYJ,ATpBE,AsBFL,AvBJGxH,CgBwBJ,CJhBE,AZREA,EEcI,AQYJ,EObE,AjBbE,GAAGd,IEcM,AFdF,CEcG,AFdFqB,EiBad,CjBbS,CU0BO,AV1BEP,CiBaJ,APaG,GAAf,AV1BO,CU0BY,CV1BG,CAAf,CEcH,AFdJ,CEc2B,CUNH,CACtB,AFiBuB,CAAC,ERZtB,EAA+B,AQYnC,EElBwB,AFkBQ,EEjBZ,EVKhB,EUNoB,EACU,KFiBlC,EElBwB,EAEtB,OAFsB,EAEA;AKIxB,ALHA,AVII,AYLR,AJiBG,AHbD,ACPF,AOiHO,AdjHD,AqBKA,AtBVF,EOYF,ELCM,CiBlCJ,CX0BE,AOiHO,EE1GL,AVAA,CLCK,AKDJ,APZEA,CYSD,CUCA,CpBGM,AMRJ,CSOC,AfCL,AFbJ,EOYI,ACPO,AcKDD,CVDE,CLGmB,EKHhB,CUCb,CdLe,CAAC,AOiHO,CH7GN,CKGf,ALHgB,AUCDG,CVDA,AG6GoC,CH7GvD,GKGyB,AKFD,CAAC+C,IdLd,EcKT,ELEF,ATNA,AcIiC,ELEG,UTNvB,CAAC,YAAd,CAA2B,UAA3B,EAAuC;ASOrC,ADqBN,AdpBO,AOXA,AFUH,ACPwC,AOkH1C,AdlHI,AkBAH,AGKK,ACPR,AL0BA,AlB7BC,EQK2C,AOkH1C,ICtFI,AP/BO,EFUL,CAAC,GAAG,ACP0C,CDOlD,AQ2GS,CPlH4C,AOkH3C,AO7GApC,CdL0C,AeFzC+G,CdDQ,GAAI,ADGoC,AOkHlD,AQpHb,ERoH8B,CQpHR,EdDI,AaQF,CP6GX,ECtFc,ADsFiB,AO7GjB,CbR8C,EOgCrE,CAAC,CMxB2B3E,MNwB5B,AMxBuB,CAAYnC,CNwBjB,GMxBK,CAAiBC,CAAC,IAAIA,CNwB7C,AMxB8C,CAACC,EAAF,ENwBI,GMxBKjB,KAAK,CAACiB,EAArC,CAAnB;ALGF,ADsBA,AJ1BF,AVKC,AOXH,AK9BF,AJqDE,AFrByC,AOmHvC,AdlHE,AsBFJ6G,CrBAK,AMCH,CADJ,AeAEA,IbsBI,EMSM,AJ1BJ,CHNC,GMqHG,CQpHC,CXKC,AHNA,ACuBA,CDvBC,CMqHX,AQpHYK,CbsBC,EEjBE,GAAf,AHNK,CAAc,CGMC,AWLA,CAACC,GdDhB,ECuBqB,CAAC,EDtBzB,KcAU,CAAuB,IbsBtB,CAA2B,CatB5B,CAAd,CbsBe,CAA+B,MAAM,CAAC,OAAtC,CAAf;AOZI,ADqBO,AJzBP,AVMN,AOXM,AFQF,ACNJ,ALDO,AYmHD,AIlJ8C,AGoC5C,ACLNN,ALyBF,AlB7BO,EuBILA,CdDK,CO8BM,CP9BJ,CDEH,ALDO,Ea6BD,CTtBH,APXOrH,CiBYN,ARTI,CMoHH,CH/GC,AUCD,CAACK,ACLC,CdDM,AcCLsH,ChBOC,GQ4GT,CNpH0B,AFQ5B,ACNe,CCFc,CGKZ,AZRd,CQKe,ARLO1H,COWN,AeFf,CVDgB,CUCA,CbNe,ADEb,ALDO,CMDO,AcCtC,CXI0B,ALGA,AgBPA,CpBAQ,CHJ7B,EAAgCC,GSGP,AFQ5B,CERG,ANCA,CcQD,ARXJ,AFUmC,EUCE,CjBZhC,EQKyB,ARLiB,GQKjD,AeDE,EACG0D,KXGmB,CAAsB,OAAtB,EAA+B,CWJrD,CACoB,EXGqC,CAAC,IWJ1D,CXIqD,CAAW,AWHnCC,CXGwB,AWHvB,CXGR,EAA8C,CWHlC2D,MXGZ,CAAlB,IWHyC,EAD7C;ANSM,ADoBW,AJxBb,AHLL,ACqBC,AHbI,ACLN,ALDA,AYkHQ,AdlHFvF,AqBII7B,ACHRiH,AvBNA,CSDK,CcOLA,EP0BiB,ENRb,ATnBApF,EDLE9B,EOWE,AeFAC,GLGG,ALJA,AWFA,CbkBC,AHbA,AgBLAuH,CRiHC,EdlHE,CAACvF,CSmBC,AHbA,CQ4GC,CO9GC,AtBTA,CYQC,AUCA3B,CVDC,AG+GA,CE3Gf,AjBZgB,CeuHJ,CO9GV,AtBTR,CiBYyB,AKHAlB,ACHzB,CXEI,AFgBJ,AHbI,AQ4GsB,AQjHA,CtBDtB,CSmBwB,AHbA,ANNA,CgBOC,CF2GvB,AO9GE,ErBJJ,EAA8B,IAA9B,EAAoC,EgBOf,AMNzB,ENMM,AMLHqE,gBADH,CACoB,OADpB,EAC6BC,CAAC,IAAII,eAAMM,WAAN,EADlC;AP0BU,AJvBP,AHJL,ACoBI,AHbI,ANPoClC,AqBKnC,ACDPhB,ALqBF,AlB7BE,EuBQAA,IPuB6B,ETpBvB,ANPoCgB,AsBIpC,AvBRAjC,CuBQCwD,EbgBE,CHbC,CAAC,CNPqC,Ee2B5C,Af3B8C,GSoBhD,AVxBe,EOWX,CAAc,APXA,EAApB,CuBQA,CAAwB,EhBGE,CAAC,CAAD,CAApB,QgBHN,EAAuC,MAAMC,CAAN,IAAW;ANI5C,ADoBF,AZ7BA,AMsBH,AHbI,AQ2GD,AdnHoC,AqBMnC,ACDH,ALoBJ,GRjBsD,CAepD,GTvBI,Ee4BO,AZ7BG,CmBMNnE,CR8GC,EE3GE,EMHE,ER8GT,CQ9GY,MNGV,AMHgBuE,CNGC,ObTnB,CACF,GaQI,CAA6B,EMHPG,EnBNxB,CaSoC,CbRlB,ImBKA,ENGhB,AMHJ,OnBNE,EAC0C;AaSzC,ADoBC,AJxBJ,ARJF,AMuBA,AK4FI,AdnHAnC,AsBKF,ALmBJ,AlB3BE,IgB+BM,Ef5BFA,CgBKA,AjBRC,CgB8BM,AJvBL,ARJA,EmBKE0B,CR8GC,AftHApE,EiBWE,CLJC,EG+GR,AftHJ,CCGe,CAAC6C,CWIC,CZPCnC,EYOhB,AWCkB,EXDE,CWCC,GvBRvB,CCGI,CAAwB,ADHA,CuBQCgE,OtBLzB,EAAkC,MsBKHW,EtBL/B,EAA4C,QsBKnB,CAAmBlF,KAAK,CAACiE,YAAzB,CAA3B;ANII,ADoBA,AJxBF,ARLG,AOAF,AJQD,AQ4GE,AdpH4CtB,AqBM9C,AJkBN,AlB1BI,IgB+BI,AZ7BC,EOAI,AJQP,CAAC,CNR6CA,EDF1ChC,CIEM,AkBMN,CNqBG,AL3BM,CMSN,ALJA,ARLK,CQKJ,AXL4C,CUCtD,AWKUd,CXLT,AVDuD,EWK1C,EUCZ,AtBRc,EWGhB,CXHmBW,CiBWf,ANPH,AWIkB,GLGI,EKHCuC,ELGpB,AjBXuB,CAACnC,CWG5B,CCIU,CAAc,ADFvB,AWGC,CtBRiB,CsBQa,AtBRCC,CAAC,IYOxB,ADJV,AXHsCA,CAAC,CYON,AZPOC,EAAF,CWKD,CCEA,CAAC,EZPSjB,GYOd,CAAW,CAAX,AZPmB,CYO1C,AZP2CiB,EYOL,AZP7B,CAAnB,MYOuD,CAAC,YAA9C,CAAD,CAAP;AKKC,ALJF,ARNc,AOIb,AJKD,ACLC,AOiHE,AdrH0C,AqBO1C,ACDJ,ALkBJ,MdxBmB,AOIT,AHAG,CPJP,CsBMCmD,EZFO,GAAG,CWGHjD,IXHQ,CAAC,CHAjB,AeEF,CfFuB,CGAV,AYEI,CZFM,CWGH,GAAGhB,KXHV,AWGe,CXH1B,AWG2B+C,MAAN,CAAanC,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASjB,KAAK,CAACiB,EAAtC,CAAnB;ALIH,ADmBG,AZ9BU,AMwBhB,AFdA,ALRI,AYoHE,AdrHFyB,AsBMAwF,ALiBN,AlBzBI,EQWF,GJVM,CDEK,AFDPxF,AsBMAwF,EbiBE,AVzBA,CAACpH,EUyBE,EFdT,CEcY,AFbR,ALTA,CAAe,AYoHN,CQ/GC,CtBNC,CAAC+B,CDFd,CUyBgB,AK8FA,CL9FC,AFdnB,ARXmB,EQYgB,CO2Gb,IL9FV,AK8FC,CL9Fc,AFd3B,APTI,CAAwB,COUmC,AO2GlC,EL9FjB,CAAoB,CFdhC,CO4Ga,CP1GT,APXA,EcqHiC,AdrHA,IcqHI,CAAC,EP5G1C,APTI,EOW4B,APXc,ESuBlC,CAAZ,CAjBoD,CAmBpD,AK4FqC,CAAe,KAAf,CAA/B;ACvFA,AJxBJ,AVIG,AEXsB,AOKvB,AJKF,ACGA,ALPF,AYyGE,Ad9G8CC,AqBO1C,ACAH,ALgBL,AlBxBMjC,EGMJ,EayBM,AZ/BqB,CmBMzB,CrBKS,ASNH,AXLJA,EYOE,AXN0CiC,CMSzC,ACGA,CGRK,CYGH,CPuBK,AMvBL,CNuBM,AbzBf,AmBEU3B,CVDE,ATDA,AFL0C,CUIrC,AJKJ,CCGX,APZsD,CCUlC,AFXP,CgB+BD,AhB/BED,CYOC,ALGf,ACGe,CQkB6B,AdnB5C,ACNF,CDMG,CULD,ATDkC,AHNhC,COUiB,AeFf,AtBRelB,CYOC,ADFlB,CWGkB,CXHM,AHQ1B,EDHwB,APVtB,CGMJ,CDME,CCN8D,CDM5C,GKFlB,ELEA,AKFiC,ELEG,GAAA,GAAiB,IAArD,KAAmE;AeAnE,ADoBM,AJxBJ,AVKA,AEbE,AOMA,ADqBN,AHhBI,ACGF,ALXO,AFFqC,AqBQtCY,ACAJqH,ALeN,AlBvBK,EU0BH,IMKQ,AZhC4B,AmBShCA,CtBRA,ECYO,AMCJ,ALXE,COwBD,AHhBA,AeFArH,CLGC,CDoBK,CAAC,AJxBJ,AFmBA,CEnBC,AVKI,AEbhB,AGWY,AJRH,CKWP,CSFY,CdTmB,AoBMlB,CXDC,AJMA,CNDK,AKFJ,AJRR,GDUL,CoBJiB,CpBIK,AMCxB,AcLoBM,EXHJ,ADqBM,COftB,ADoBM,ANLiB,CMKK,ATrB1B,AeFI,CAAmBlB,CfEC,ISqBpB,AMvBA,CNuB6B,AL1B/B,CDqBK,CCrBkB,ADqBM,GAAxB,CAA4B,CMK/B,EAAsC,ANLnC,CEnBC,AFmBZ,CEnBqC,ADFC,CAAC,EK0B/B,IJxBI,EAAkC,EDFxC,ECE4C,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;AKKH,ADoBM,AJxBJ,AVKG,AEbN,AOMM,AJKA,ACGJ,ALRA,AYiHA,AdtHE0C,AqBQG,ACAJ,ALcL,AlBtBG,IWKK,EVLFA,EGDE,AGWA,CILK,AHQJ,ALRA,CDOK,ASPA,CTOC,Aa0GJ,CR5GC,CILJ,AJKK,ACGT,CNDc,AEbJ,AOMI,EHQF,ALRZ,AYiHA,CXtHE,AHAW,CAACG,CCYM,AKFhB,AJLW,CDOM,AMCrB,GGRI,EPLM,AOKe,CPLd,ADKX,GQA6B,AVL3B,CAAwB,CCYtB,CSP4B,IAAI,KVLlC,CGAA,CAA0B,AHAW,OGArC,COK8B,CPLK,AOKO,EVL1C,EAAkD,EUKR,CAAA,MAAA,CAAA,EPL1C,EAAqD,IAArD,EAA2D,KAA3D,CADJ;AFcM,AEZN,AKCI,AEIyB,ADoB7B,AHfK,ACGH,ALPA,AYgHD,AdvHuDC,AqBSnD,ACAJ,ALaH,GHoF2D,AQzGzD,CrBYM,EEZF,AKCO,AEIkB,ADoBzB,ET1BoDA,COcjD,CLPC,GDMO,CAAC,AQaJ,AT1BkD,CGCjD,CHDmD,EGChD,AIad,CEYe,ECpB2B,AHQzB,EGRU,ARCR,CMLjB,CPWE,AOXuB,CPWD,ACNI,EOmBhC,APnBE,EOmB0B,AFZ1B,CNDI,iBEZwC,CAAC,KAAD,CAA9C;AaYA,ADYW,AJjBT,AVMI,AEZN,AKOA,AEJ8C,ADsB5C,AHfC,ACGF,ALPC,AFRoD,AsBWtDuF,AvBVA,EiBYA,ARJA,AcEAA,CPcI,CdXE,CSTwC,CPH1C,COK4B,AVP5B,ADCC,EEaM,CeDH,ALLA,ARNA,ADMA,CoBGC,AvBVArI,CEaK,AqBHJsI,CNEF,AfCF,AEZK,AKOX,CAAY,AEJkC,CAAZ,ARGrB,CQHP,AXJN,EICgB,ADMQ,CSAP,ARNA,CDMf,AHPgB3H,CSQlB,ANLgE,CSI5C,ATClB,CMA4B,EcE9B,CXHwB,AWGA4H,CdFxB,CLPgB,AJDhB,CICA,AKO4C,CTRhB,IuBU5B,CAAiC,CdFjC,EAA0E,aGDtD,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,MWG1D,CXHoB,CAAlB;AKMA,ADmBC,AJxBD,AVMG,AEZL,AKIA,AEEM,AGjCR,AJoDI,AHfD,ACID,AOwGA,AdxHI7F,AqBUA,ACCL,ALWD,AlBrBI,CgBoBJ,CDmGE,EJhHM,ADmBJ,ENzBE,AHFAA,EUQM,CFFV,AEEW,CXPHvB,CiBYC,ALLA,AUEA+B,CZiBC,EDrBV,CLJa,AMyBA,AK6FA,CE3GC,AF2GA,CNlHN,ARNO,AqBUX,ClBRY,AHFAL,CGEC,AOMX,ADmBW,CEnBC,ARNlB,AOMsB,AWEJ,AtBTA,CYOC,AHFnB,AMkHa,AO9GM,ELGjB,AF2GgC,AfvHbnC,CsBSCP,EVFpB,CGgHW,EJhHP,AIgH0C,AdxH5C,AqBUuB,CrBVC,AqBUA+C,CtBTC,CAACnC,IsBSZ,AtBTG,CU0BR,AT3BT,AqBUA,AtBT+BC,CU0BT,AV1BU,CCDC,GDCGA,CAAC,CU0B5B,AV1B6BC,EU0BR,AT3B9B,ADCoC,ECDM,GDCGjB,CU0BT,CAAC,GV1Ba,CAACiB,EAAlC,CAAnB,WU0BgC,EAArB,CAAX,CAF0B,CAG1B;AOdD,ADoBH,AJzBG,AVME,AEZH,AKME,AEAG,ARAH,AYgHA,AdzH8C6B,AqBW5C,CpBHC,KELD,EHH4CA,CQSzC,CNAC,CmBECqD,CP8GC,EdzH4C,EQSpD,ANAY,AYgHZ,AdzHsD,CGGzC,AkBQX,EbFa,ANAA,CCNC,CAAlB,KKME,CNAuB,CAAC,gBAAT,CACX,OAAO,CAAC,OADG,EAEX;ASDN,ARNA,AKME,ACmBA,AHfF,AJHU,AY+GN,Ad1H0C,AqBY3C,AJUL,AlBpBI,EOYF,EGeE,CYtCA,ErBSE,CGIE,AGUA,APZA,CSQC,ATRAhF,EOYD,AQ4GG,ENhHP,GAAY,CCmBC,CAAC,AK6FZ,CfxHF,CSQA,CTRiB,MU2BjB,CAAwB,GNzBG,AMyB3B,CAA4B,ENzBE,CMyB9B,CNzBF,CMyBmC,QAAjC;AO/CkB,AbuBpB,AKME,AEDE,ADoBH,AHfC,AJNe,AYkHX,Ad1HFuB,AqBYH,AJSH,AlBnBM9B,EWOA,CDNgD,CA4BpD,EN3BI,AOKI,AREF,AFXF8B,ADEA9B,CWOK,EFCF,CNFU,EAIX,GQHF,AIiHS,CNhHX,AEDgB,CRDD,AFRF,CEQb,AFRciC,CQUC,ANR+C,AHA/C,CGWf,AY6GgB,AfxHA3B,EWOd,EXPA,CIEmB,AWsHA,AfxHAlB,CSQrB,ELNmC,CWsH/B,Ad1HF,CAAwB,ADExB,EIEJ,QHJI,EAAoC,UAApC,EAAgD;AgBgBtD,ARLI,AEDE,AJKF,AJDA,AFdoD8C,AiBqBxD,AlBlBK,EWOC,IAAI,CAAC,CVV6CA,CQW/C,IEDH,CFCF,ARX0D,EAAE,CQW/C,EAAb;ALNF,AOMG,AJKD,ACEF,ALHE,AY4GE,Ad3HgD,AqBcpD,AJOF,AlBjBG,CWRI,CHsBL,KPlBI,CqBcE6E,ClBTC,AIaA,EOyGE,CPzGF,GJbM,CAAC,CWsHV,AO7GJ,CAAgB3H,KAAhB,ClBTO,CkBSgB,ClBTvB,EAA0B;AACxB,AKMA,ACoBF,AHfE,ACEA,AOyGI,AO7GJ,AJMJ,ERWE,EN1BE,KKMK,CDOC,AcJAG,CdIC,EJbE,AKMA,CAAC,ADOA,CEaC,AK4FA,AO7GA,CZiBC,CDpBC,CAAb,AaGc,CdIC,CCPC,AMgHA,CNhHC,GAAG,AaGAuE,CP6GC,CPzGX,CAAa,CEazB,CAA2B,AK4Fd,ENhHgB,CAAC,ACoB9B,AK4F8B,CL5FC,AFbnB,GAAsB,AOyGrB,CPzGX,CCPoB,CCoBe,AK4FA,AO7GTG,CZiBU,CDpBC,CAArC,EAAwC,CAAC,AMgHA,CAAC,CNhH1C,ACoBF,AYjBsB,EbHyB,ACoBA,AYjB7C,EP6GyC,CAArC,KL5FN;ANzBE,AKMG,AKhCP,AJoDE,AHfE,ACEA,ALJA,AFdEnC,AqBcFvC,AJKJ,AlBfE,IsBUEA,ErBdEuC,EOkBE,ALJA,COiBC,AYjBA,AtBVA,CICC,AkBSA0B,AtBVAxD,CSOE,CDOA,EJbE,CIaC,CCPR,CLNU,AKMqB,ACoBpC,AFbE,APlBa,CQWV,ARXWmC,GEcG,CMHsB,AaGvC,ClBTmB,AJDd,CICe,ADSA,CAApB,AmBAqB/C,AtBVAa,ESOuB,ERX1C,CAAwBmC,AqBcA,CAAC/B,EAA3B,ElBTA,CAFwB,AJCnB,CIEL,AJFF,CSOyC,EAApC,ARXD,GAAqCiB,KAAK,IAAI;AWWlD,AHCG,ACoBJ,AHfG,ACEA,ALJA,AY4GE,Ad1HE,AiBkBR,AlBdC,EYMC,MJQM,ALJA,GY4GG,EZ5GE,CFdCe,EEcE,CAAC,AY4GX,CZ5GF,ISJkB,CAAC,CJQC,APlBA,GOkBG,APlBAtB,EAAE,CWUP,AXVQoB,EWUe,AJQzC,SPlBuB,CAAe,KAAKtB,SAApB,EAA+B,WAA/B,EAA4CiB,WAA5C,CAAwD,KAAKjB,SAA7D,CAAnB;AWWJ,APSG,ADdH,AKMD,AFKC,AJFA,AY4GE,AdzHE,AqBYJiD,AJIJ,MbEa,EDdL,ADSA,GSJG,AGgHA,CXrHC,CAAC,AHJAvE,EWSE,APSO,CUuGhB,CZ5GW,CEKqC,AJlB9C,CIkBiB,AJlBN+C,AqBYTyB,CnBCU,CAAhB,EEMC,CAAC,CJnBE,CAAkBxB,CImBjB,AiBPL,ClBRI,AkBQWhD,EVHR,CAAa,APUnB,EDf4B,AHJzB,AqBYJ,CrBZ8BH,EImBN,EOVjB,CAAP,AXTmC,IAAI,SGIvC,EAAkD;AQMnD,APUG,ADfA,AKOJ,ACkCK,AH9BH,ACEA,ALJA,AY4GI,AdzHEiD,AqBYP,AJGH,MdXM,AMyCO,EL1BD,CAAC,AGFJ,CLJC,AFbAA,EImBM,CAAC,AGFJ,CHEK,AGFJ,COwGC,EVtGM,AGFJ,CAAb,COwGe,CL5EQ,AF5BP,AOwGA,AdzHA,CImBH,AGFI,APjBAG,CImBf,CK0BwB,CF5BN,APjBd,CGIe,AIarB,AOwGW,AdzHUpD,CcyHC,CL5EQ,AF5BP,CJbC,AIaA,EE4BE,AF5B1B,APjBM,CcyHK,CXrHT,AMyCC,AF5ByB,AOwGxB;AVrGF,ADfD,AUfL,AP0BI,ACEE,ALLK,AYqGP,AdjHK,AiBcT,EbKM,GDrBsB,CAOxB,ADOO,GFdH,GIqBQ,AGFJ,CHEK,AGFJ,ALLH,GEOJ,AGFU,CHEK,CAAf,EAAkB,CGFH,GHEf,IGFU,CAAa,CAAb,CAAV,CAD0B,CAE1B;AI3C+B,AP6C/B,AS9BN,AP0BI,ACGE,ALPc,AFXb,AqBYLiH,EAAAA,IRvBI,AXsBc,CFjBd,CqBkBE,CjBOK,CAAP,CiBPK,CnBDe,EAAE,WWtBH,GAAG,CAAC,IAAD,EAAe,SAAf,KACxB,GAAG,IAAI,KAAK,SAAS,EADzB;AT+BK,AEJD,ACGE,ALRuB,AY8GzB,AdxHC,AqBYD,AJCJ,CbCO,IJzCH,GEqCyB,GY8GlB,AO5GA,KP4GP,gBO5GY;AlBRZ,AUbJ,APyBI,ACGE,ALTsB,AY+GzB,IDlIC,IVaI,aAAa,CAAC,GAAd,CAAkB,GUbG,CVarB,CAAJ,CUb4B,CVaC,GUbjC;AGuBO,ALLA,ARJD,AKMM,AFMR,ACGE,ALVI,AFTNpF,AiBaJ,ETHY,ERVRA,EgBaS,ALLA,ARJP,EDKkC,EmBI9B,CrBbC,CAACwB,CQUW,CNDnB,CcIkB,AKAPH,CbHQ,EQGG,GhBbtB,AqBaM,CAAY0E,CLAG,ChBbD1F,CqBad,CAAgBlC,CLAkB,EbTf,AHJA,CWQQ,ARJP,CkBSC,EVLS,AXRP,CGI3B,CAA6B,AkBSA,EVLS,ERJtC,EAD2B,CAE3B,mBQGkC,EAAjC;AKML,ARHE,AKnBJ,APyBI,ACGE,AO0EqD,Ad7FrD,AqBaI,CPgFH,GDtGH,KGsBK,ERHE,AKnBA,AbSA2B,EgBaE,AhBbP,AqBaW,EbHF,CRVCO,CaTC,CAAC,GbSG,CgBaZ,AhBbaG,CgBaC,GHtBnB,ELmBO,ARVK,CgBaa,ARHA,ARVAI,CgBaC,CHtBC,ELmBpB,CAAP,AaGkB,CLAO,AhBbvB,CgBaG,EAA6B,IHtBtC,EAA4C,WGsBnC,CAAP;AACD,ADsBM,AXjBA,ADdD,AKMH,AKnBD,APyBE,ACGE,ALXF,AYsHJ,AGlHA,CDDO,CHpBL,IE4CW,AXjBA,IDdH,CDIC,MEUa,EWiBE,CXjBE,AFVR,CEUO,CWiBG,Cb3BP,EEUqC,ES3BjC,EE4CE,AZ/BA,ADIzB,CWjB0B,CXiBC,Ea4B1B,CZhC6B,CUbhC,GVaI,CkBSiCzC,ClBTC,IkBSI,CAACiB,EAAG,GNuB5C,IACK,OAAO,iBAAP,KAA6B,UAA9B,GACJ,mBAAmB,CAAC,OAAD,EAAU,iBAAV,CADf,GAEJ,qBAAqB,CAAC,OAAD,EAAU,iBAAV,CAJlB;AXhBL,ADdM,AUbP,APyBG,ACGE,ALXA,AFRAU,AiBWN,CJtBA,KbWMA,CaTC,CVaC,AHJA,CIkBC,AJlBAM,EaTE,CXiBC,IEUI,AFVA,AFRV,CIkBG,CS3BS,CXiBC,AFRAC,GIkBG,ES3BE,AbSA,CaTC,AXiBA,CAAC,CCJC,CHJC,EGIE,ECcrB,CS3BS,CVaV,AUb0B,AXiBf,EEUiB,AFV9B,EmBKgClC,KAAM,GjBKE,CAAC,GAAX,CAAe,CAAf,AS3BzB,CT2BT,IS3BuD,WAAlD,EAA+D;AT4BrE,ADdM,AKMK,AKnBV,APyBE,ACGE,APnBEmC,AiBUR,CbMO,CINK,AKnBV,MbSMA,CaTC,CAAC,CLmBW,GAAA,AKnBnB,CACI,AbQS,CAACC,KAAR,CAAc,gBqBagBkC,CAAC,IrBbIpC,AqBaA,KrBbK,AqBaAyF,CrBbCtF,MAAN,CAAaiB,CaRlD,AQqBqC,CAAetD,ERpBpD,GQoBqC,CAAsB,CrBbzD,gEaRF,GAEA,gCAHJ;AVcG,AKMD,AKhBF,APsBE,ACGE,ALZA,AFPC,AiBSP,EJfE,GVJ0B,CAexB,CHPE,GQYI,ANHA,IAAI,GMGG,ENHE,CMGC,GNHd,EMGmB,ANHA,EWbE,GAAG,ELgB1B,GKhBF;AGkBF,AD0BA,AP3BI,AKhBH,APsBG,ACGE,ALZE,AeCR,MDGM,AD0BA,IP3BI,CAAC,AaFD,GbEI,OAAO,CO2BC,AP3BA,CQCC,ED2BnB,CC3BuB,AD2BtB,EP5BS,GQCY,ARDK,CAA3B,CO4BA,EC3BkD,AD2BnB,OAA/B,KAAwD;AC1B1D,AD2BI,AP5BF,AKfJ,APqBI,ACGE,ALZE,AFPF,AqBaG,AJNT,KIDU,CLKJ,AKEK,IbHD,CQCC,AhBXAqB,IQUI,GAAG,ARVZ,KgBWiB,ARDA,KAAnB,CAHiB,CAKjB,EQDF,EAAgC;AAC9B,AD2BE,AZnCF,AKSA,AFIA,ACGE,ALZE,AFPH,AiBML,KjBdI,GGWI,GaQG,KAAK,CAAC,OAAb,GbRuB,KAAK,IAA5B,EAAkC;AaSnC,AD2BG,AZnCA,AKSF,AFIA,ACGE,ALZE,AYoHD,Ad3HJ,AiBKH,GDIE,EKPE,ClBCE,AWwHO,GEhHJ,IAAI,CFgHQ,GXxHJ,AWwHmB,CAAC,EEhHjB,GFgHgB,EEhHvB,AFgHwC,GAAjB,EEhHN,GFgHgD,KEhHrE,EAA+B;AACpC,AD2BE,AZnCD,AKSD,AFIA,ACGE,ALZE,AYoHN,AO9GC,AJTH,KG1DI,CL4FM,Eb/BF,GcIG,ED2BM,CAAC,Ab/BJ,CAAC,CcIX,ED2BM,KAAiB,Gb/BnB,GAAqB,Ea+BnB,Gb/BwB,Ca+BK,Ab/BJ,GAAN,EAArB,Ea+BsC,CAAC,UAArC,IACA,EAAE,WAAW,OAAO,CAAC,UAArB,CADJ,EACsC;AC3BzC,AD4BK,AP3BJ,AFIA,ACGE,ALZE,AYoHN,Ad3HAkC,AoBgBC,AHbH,EjBHEA,CgBSO,MAEA,AFgHA,ECpFD,CDoFI,KCpFJ,ADoFS,Ad3HA,CeuCT,AfvCUC,Ic2HT,ECpFD,CAAA,CfvCkB,Cc2HC,Ed3HE,Cc2HC,CCpFtB,CAAA,GDoF2B,Ad3HA,CAAG,CAArB,CeuCT,ADoFmB,CCpFnB,AfvCgC,EeuChC,CDoFkC,CCnF7B,IDmFkC,GCpFvC,CAAA,CDoF4C,CCnFhC,IDmFX,CAAP;AE/GE,AD6BM,AZtCN,AKUA,AFIA,ACGE,ALZC,AYoHN,Ad3HG,AqB3D+B,CPmL5B,KChFG,IC7BA,AhBXAT,CGEC,GaSG,AD6BI,CAAC,AZtCJ,IaSL,CACF,AD4BU,AZtCE,CHFC,CewC2B,EfxCxB,KGEb,AHFkBpB,EAAL,CAAQoB,CGEC,IAAI,CAAC,KAAL,AHFT,CAAoB,CAAC,GGEG,EHFEtB,OGE9C,EAAuD,AHFf,CAApB,EAAsC,WAAtC,CAApB,agBaQ,KAAK;AD4BL,AZtCN,AKUF,AKnBG,APuBH,AcAF,AH/EF,MJwDa,AOuBPzB,ELwBM,GKxBV,ELwBe,CAAC,AKxBJ,YPvBmB,EE+CrB,CAAqB,AF/CI,OE+CG,CAAC,CF/CL,EE+CxB,EAAkC,AF9CzC,KGgBK,CAAN,AHhBA,CE8CQ,GF9CmB;AGoB5B,AD2BQ,AZtCL,AKUF,AKlBE,APsBF,ACEE,ALZA,AFNF+C,AoBgBA,ACJJqE,IrBZIrE,EEME,EWZM,GXYD,AkBUA,CbEC,EcNE,CrBZC,AqBYAsE,CRlBK,AbMJrE,AoBgBAuE,GPtBO,EQkBvB,CDII,ACJkB,CdMC,GAAG,APlBtB,COkBuB,CAAC,CPlBCrF,KAAK,IaNQ,AbMJ,AqBYtC,CRlB2C,ANwBjB,CAAc,AcNAwF,KRlBS,CAAC,ANwBxB,CAApB,CAnB0B,CAoB1B,AcPN,CRlB0C,EAAc,SAAd,CAApC;AGoBL,AbXK,AKUF,AFIA,ACGE,AOuGN,Ad1HMlE,AoBgBH,CJdH,KbAM,AWwHA,Ad1HAA,IGEI,CAAC,GHFG,EGER,GAAa,aWwHa,GAAwB,GXxHlB,KAAK,IAAxB,GAA+B,CAAC,CAAhC,GAAoC,IAAI,CAAC,KAAL,GAAa,WAA9D,CAHqD,CAIrD;AaYN,ADqBoB,APvBhB,AKnBE,APuBF,ACGE,ALbA,AYoHJ,Ad1HG,Ec0HH,GCxFM,AfpCJ,CeoCI,AFzCE,IXaA,CYoHC,EAAE,CZpHC,CAAC,EYmHyC,EDhIjC,GAAG,CXahB,KAAkB,0BWba,GAAf,CAAmB,QAAnB,CAApB;AE+CC,AZrCD,AKUF,AFIA,AJX0B,AYqH5B,AM1GA,EN0GA,CC3FI,GZ7BA,AWwHA,AM1GAxD,EN0GE,CCnFK,EKvBX,CAAUwH,ENwG4C,CXtHzC,AiBcb,EAAe,CjBdC,8BAA8B,CAAC,KAAD,EAAQ,SAAR,CAA1C;AYsCE,AZrCF,AKUF,AKpBE,APwBF,ACEE,ALdA,AYsHJ,Ad1HEzE,AoBgBA,EN0GF,Ed1HEA,EGEE,AUVI,AN0BJ,ELdiD,CkBY9CwE,CjBdC,CWwHC,EXxHE,AWwHA,Ed1HE,AoBgBX,CpBhBYtF,EGEE,AiBcAuF,CjBdC,AUVI,EOwBnB,CbEkB,CPlBlB,CaRwB,CN0BH,CAAC,APlBAtF,EGER,CAAZ,AWqHkD,EdvHzB,EaRzB,EAAiC,AbQJ,EOkBE,GAAG,CAAC,CAAf,IAAoB,gBAArB,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;AQoBE,AZrCH,AKUD,AKpBI,APwBJ,ACIE,ALhBE,AYsHN,Ad1HIsB,Ec0HJ,EDlIM,EbQFA,Gc0HG,EAAE,GZtHE,AFJC,CAACtB,CcsHyC,CD9HnC,CXYQ,CAAC,CWZN,AbQV,CAAR,WEIO,EAAL,EAAuC;AaoCvC,AZrCL,AUVO,APwBN,ACIE,ALhBI,AYsHR,Ad1HG,AoBgBD,EN0GF,Gd5HE,CaNM,EOwBH,IN0GK,CM1GAqF,CN0GE,IDlIQ,AXYN,CkBYT,CPxBiB,AOwBLpH,IPxBS,COwBrB,GlBZmB,CkBYE,CAArB,CPxBiB,AXYM,EWbN,COyBS,ClBZa,CAAC,GkBYToH,MAAL,ClBZvB,AkBYmChH,QAAZ,IAAwB,CAArD,EAAwD;ALwBpD,AP5BJ,AKnBM,APwBN,AJZM,AYgH8C,AMpGlD,CNoGN,KD5HU,ELmBF,CAAC,EO4BM,AKvBJkH,GZLG,CAAN,AKnBW,EAAE,CXYL,CMOG,EKnBM,EOwBnB,CPxBe,AOwBG,EZLE,CAAC,CAAD,CAAP,EYKb,EAA2B,CZLC,EAA1B,IAAgC,EYKlC,KZLyC,CAAC,CAAD,CAAP,KAAe,EAAnD,EAAuD;AO6BjD,AZtCR,AKUI,AKtBkB,AP2BpB,ACGE,ALhBW,AYwHjB,Ad3HI,AoBgBC,EjBfH,GUZM,AOyBJ,CLyBM,ADoFJ,ICpFQ,CfvCH1E,AoBgBA,CLuBK,AP5BJ,ADQA,CCRC,CNRI,CkBaH,CZLE,GO2BD,CKtBIwE,CZLE,CAAC,ARXlB,CQWiB,AMgHE,CNhHP,CLVS,AKUA,CLVC,AIkBA,AOwGA,AM3GZ,CN2Gd,AM3G0BpH,EbGG,CCRvB,EYKQ,CjBfZ,CAAiC,CAAD,CiBeC,CAAxB,EjBf8B,AiBeH,CjBfI,CAAC,UAAF,CAAc,UIkBH,CJlBX,CAA0B,CAA1B,CAAvC,AIkB2B,CAA4B,CAA5B,CAAvB;AQqBI,AZtCT,AGeG,AJdY,AYyHhB,Ad3HG,AoBgBG,MLuBI,ADoFJ,GCpFO,EAAE,AKvBJsH,KlBdgB,CaqCN,EAFN,IKrBT,CAAkB,ElBdd,CAFqC,CAGrC,AYwHkB,GAAG,AM3GzB,EAA2B,GN2GG,CAApC,KM3GM;AJHC,AD2BG,AP7BJ,AKnBE,APyBJ,ACEE,ALfI,AYwHV,AM3GK,MJJQ,AD2BH,ADoFJ,GE/GU,CRFN,ADQA,ESLN,CAAC,ED0Bc,EAAE,AP7BJ,CAAP,EQGN,EAAgC,ADuBrB,CP1BQ,CDQC,CSLe,ITKV,ESLzB,ARHE,EAA2B,ADQ3B,EAA6B,CSLoC,AHtBhD,ECoIe,CDpI9B,CAAmB,CCoIc,KAAK,CAA9C,CDpIQ,EAA6B,aAA7B;AGuBF,AD0BI,AZtCV,AKSQ,AKnBD,AP0BH,ACCI,ALfE,AYwHV,Ad3HE,MeuCQ,AZtCJ,AW0HA,EE9GM,AhBbJhE,EMiBE,KUJS,ARHJ,CO6BK,AZtCJ,CHDd,CgBaoB,AD0BA,ATtBJ,CHhBE,CYkCL,AfnCK,CQUC,AFOA,CEPC,CLTH,AKSE,CQGO,ARHpB,CQGqB,EbZK,IaYZ,CACZ,CAAC,GAAD,CF6G2B,CE7GrB,CAAN,CF6G8B,CE7GrB,AVIX,GUJE,CF6GmC,CRzGhC,AQyGb,GE7G2B,GAAG,EVItB,CUJyB,AVIX,OAAd,CAAsB,OAAtB,CAA8B,CUJY,CAAC,CAAD,CAAvB,GAA6B,EVIhD,CAAwC,IUJe,AVIvD,CUJwD,AVG3C,GUH8C,AVK3D,GUL8D,CAAP,CADzC,EAEZ,CVIM,CAAC,KUJA,CAAC,CAAD,CAFK,CAAhB,CVME,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AUDE,AbdJ,AKSK,AFUH,ACFI,ALfE,AY4HV,Ad/HI,AoBgBA,MjBfE,GacO,AICJ0C,CdIC,CHnBC,AHDA,EgBeM,CbdF,CGmBA,ANpBAzC,AoBgBX,GjBfe,AGmBO,CHnBN,CGmBhB,EULS,AhBfF,CgBegB,AhBfJ,CAACC,GGCT,GacF,ChBfU,CgBea,AbdH,CHDAC,MAAV,KAAqB,KgBe/B,CAAP;AACD,ADuBK,AZtC0B,AUT9B,AP6BF,ACFI,ALfE,AFHJ,AoBgBH,AH/EH,CDwEO,KHlBG,IP6BA,ENpBEb,EaTM,CP6BH,EO7BM,CP6BH,KAAK,ANpBA,GAAG,IaTQ,CAAC,AP6BjB,ANpBaQ,CMoBC,KAA5B,CA5CI,CA6CJ,IO9BiB,CAA2B,EbStB,CaTL,CAA+B,AbS9C,MaToD,CAAC,OAAtC,CAAf;AEgDI,AZvCI,AKUR,ADSE,APlBF,IGDmE,CAA3D,GAA+D,CAA3E,CKUQ,ERTEb,KQSK,CAAP,KAAa,ARTA,GAAGK,KQShB,IAAyB,CAAC,CRTC,CAACL,QQSQ,CAAC,CAAD,CAAxC,ARToB,CAAwB,CQSC,IRTIjB,SAA7B,CAApB;AeuCI,AZvCR,AKUM,AKnBF,AP8BF,ACFI,ALhBE,AFFJ,AoBgBJH,EAAAA,GDvFE,CN6DM,EVSF,EGqBE,ENpBEO,CoBgBC,CjBjBC,AUTI,CLmBH,CAAP,AFWQ,AJlBF,AkBcE,CjBjBC,EUTM,AP8BJ,ANpBA,EEEA,CFFGa,EEEA,CCHG,ADGf,CCHgB,CGqBC,CO9BrB,AP8BsB,EO9BM,GbUD,CAACmB,MAAZ,EGDL,AHCX,CGDqC,CGqBxB,CACX,EHtBS,EAAgC,IGqB9B,EAEX,UHvBS,EAAkD,IAAlD,EAAwD,KAAxD,CAAf;AYwCQ,AP7BH,AKnBC,AP+BI,ACHJ,AYNL,ACIC,QbEI,GM5BO,CN4BH,IAAI,CAAC,EM5BT,EN4Ba,gBAAgB,GAAG,aAAH,GAAmB,oBAAvC,CAAT;AQqBE,AZxCR,AKWG,AKnBE,AP4BY,ACAZ,ALjBG,AFFJhC,AoBkBF,MdII,ANtBFA,COYA,EJbG,AiBmBA0F,CdCU,EAIX,CCJK,APnBA,CAACtF,CGDC,AiBmBX,CjBnBY,CGoBG,AJjBJ,CIiBX,AcDc,GlBhBC,AFFb,CEEc,AkBgBhB,EjBnBK,AHCeC,CEED,CCHrB,ADGQ,ECHkB,ADGF,CAAC,AFFE,GEEC,CFFG,KEEvB,EAA4B,CAAC,EAA7B,EAAiC;AasCjC,AZxCN,AGwBA,ACJI,ALjBI,AFFJ0B,AmBaNtC,ACMEQ,EDNFR,EhBdE,AiBoBAQ,IdII,ANvBA8B,CGDC,CiBoBC,CAACS,EDNE,CnBbC,CAACnC,CmBaC,CbUC,CJrBD,EIqBI,ANvBN,CMuBV,ANvBI,KEEgB,CAAC,AkBiBrB,CAAwB,MAAxB,EAAgCoC,ClBjBD,AkBiBE,ClBjBD,CAAD,CAAV,CAAc,AkBiBE,IlBjBjB,EAAqB,oBAArB,CAAZ,EAAwD;AasC1D,AZxCP,AKUC,AKlBE,APgCF,ACJI,ALjBM,AY6Hd,Ad/HO,AmBaH,ACME,MN4GA,CdjIA,CQWE,AKlBI,APgCJ,GOhCO,AO4BJ6B,CZVC,EKlBM,CLkBH,AMsHA,CZ7HD,CMOV,AFca,AcJX,CN4GY,EDxIM,APgCJ,COhCK,APgCrB,AJrBe,OWXD,CAAe,ACwIjC,IDxIkB,CAAoB,gBAApB,CAAZ;AEiDI,AFhDJ,APgCF,ACJI,ALjBK,AY8Hb,AKlHI,ACKC,EP5BC,GO0BF,GdMI,CaTCnG,CNvBK,EPgCV,COhCa,CMuBb,GAAa,IAAb,KNvB0B,CAAC,SAAd,CAAwB,GAAxB,CAA4B,GAA5B,CAAX;AEiDI,AZzCR,AKWE,AFcA,ACJI,ALjBG,AFHL6B,AmBeF,ACKD,MpBpBGA,EMwBE,ACJA,CJrBC,AKWA,AWKAqE,GbSG,ACJA,CCVC,ARVA,CGDX,AKWY,ARVA7C,CMwBC,CCJC,AYLZ,CXLa,ADUA,CCVb,ADUc,CYLC,CXLC,CAAC,AFcA,CAAC,CNxBhB,CQUkB,ADUR,AYLZ,CXLA,ADUqB,CAAT,APpBUnB,CQUC,CAAC,ADUA,ECVxB,AFcW,CNxBgB,CQUC,AFc5B,CAtDI,CAuDJ,CNzB+B,OOoBO,CAAC,KAA3B,IAAoC,cAAc,CAAC,CAAD,CAAlD,GACJ,cAAc,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;AQqBE,AZzCT,AKWK,AKnBA,AN+BC,APtBCyB,AmBgBJ7B,ChBxBJ,GgBwBIA,EJwBM,AP9BJ,AKnBI,EbSF6B,EQUE,AWMA,CAACU,GXNG,AKnBI,CbSH,CAACxC,CewCK,EFjDE,CEiDF,CP9BA,CAAC,CAAD,ARVE,CQUjB,ARVkBY,GmBgBpB,CNzBE,AMyBsB,ENzBM,AbSnB,CAAP,UmBgBJ,EAAuC,MAAM6B,CAAN,IAAW;AJyB1C,AP9BN,AKnBE,APiCJ,ACFC,ALpBK,AFFH,AmBgBD,ACIJ2C,EAAAA,KpBtBI,CoBsBE,EP7BM,CPiCH,AcJA,CLoBK,AP9BJ,AWMA9G,IXNI,CKnBK,AMyBJ,EJwBM,AP9BJ,ANRF,CWXO,APiCJ,AaRA,GbQG,CEdC,ANRF,CMQG,CO8BK,AP9BN,AKnBM,AMyBJuE,CJwBK,AP9BzB,AKnByB,CPiCH,CAAC,AJtBF,CAAjB,EAAoB,GIsB1B,EAAiC,CSgBrB,GIxBgBG,EJwBe,EFjDvB,EAAhB,EMyBkB,EAApB,EJwBM,EAA+C;AAC7C,AZzCd,AGyBM,AJtBM,AFFP,AoBoBD,KpB9BO,CGSL,AGyBA,ANlCF,IMkCM,AcJA7E,GdIG,ESgBM,AKpBJ,GdIG,AcJA,CdIC,GSgBO,CAAC,AKpBJA,GLoBT,EThBI,AcJd,CdIE,CSgBsC,MZzCR,CYyCe,CAAC,CZxChD,CAAC,KAAD,EAAwB,EYwCgB,CAAoB,IAApB,CAAyB,EZxC/B,EYwCM,CAA9B,AZxC2B,CAAC,CAAtC,KAA2C;AYyClC,AZxCP,AKSA,AKnBE,AN+BJ,ALnBQ,AFFT,AmBeG,ACKF,IbCA,GJrBO,CUVC,AN+BJ,ECZE,AWMDG,ACKCF,CjBpBK,CAAC,AIqBJ,ECZE,AYWA,CjBpBK,AgBeL,CAACmE,CZME,AaDA,EZXE,KDYP,CJrBiB,AIqBJ,CAAb,CAAR,CJrB4B,AKS1B,AWMA,ChBfA,CKSwB,AWMD,ChBfM,CAAC,CUV5B,EVU+B,AUVA,KVUK,CAAC,CiBoBfpE,KjBpBxB,AiBoBW,CAAb,CjBpBiD,CAAC,EAAhD,EAAoD;AYyC/C,AZxCH,AKSA,AKnBE,APiCJ,ACFF,ALnBQ,AiBaJ,ACMJ,MP/BM,CEgCK,GZtBD,AGuBJ,CAAC,ACFA,AaAA,CP/BK,CAAC,AMyBJA,ChBfK,AKSJ,CAAC,ADYX,EJrBiB,CKSH,AWMV,EjBbU,CWZR,AMyBW,ChBfK,AKSJ,AKnBK,CVUA,AKSJ,CLTG,CAAlB,EgBemB0E,CXNnB,IYYQ,ClBnBe,GAAG,IWZxB,CAAoC,CMyBbW,CjBbQ,CAAC,GIqBV,COjCtB,EAA6C,CPiC5C,CAAL,CJrBmC,CIqBF,AJrB3B,AiBae,CjBhBG,AiBgBgBlF,CjBZlC,GWbF,CMyByC,CAACiE,YAAzB,CAAnB;ANxBC,APiCD,ACFL,AO2GG,AdhIJ,AmBeM,MLiHc,EdhIdN,KMuBK,AaRAqC,MnBfX,AmBeM,CbQA,ANvBYlF,CMuBC,AQyGf,CdhIJ,EAAsBuC,CMuBhB,CAAkB,IQyGoB,EdhI5C,EAAgC,CMuB1B,MQyGF,CAAmD;ACxF/C,AZxCF,AKSA,ANNI,AYoaV,AdtaE,AmBeG,ELuZL,IC/XQ,EZxCE,GHCD,CQQC,CM8ZV,CC/XgB,CAAC,AfvCJE,Ccsab,IC/XgB,AbrCA,EaqC8B,AfvCrC,CQQY,ARRA,CQQC,ANNF,AFFEC,CQQD,CAAX,CNNa,GMMK,CAAC,ARRR,EAAUC,MAAV,EQQkB,CAAC,CAAD,CLTR,AKSzB,ARRoC,EQQE,ELTlC,CAAJ,ADGuC,CAAC,CCHR,GDGf,CAA4B,aAA5B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AaqCA,AZxCF,AKSA,AKnBF,APiCA,ACDN,ALlBU,AYmaR,AdtaE,AmBeD,EZMH,EMhCM,CMoBJ,GJ8BQ,ATjBJ,EEdE,EKnBM,AbWJ/B,CeuCK,AZxCA,CYwCC,AZxCR,AKSI,CKnBK,EPiCF,CEdC,CKnBK,AbWJ,COqBC,EPrBE,COqBF,ECbK,CAAP,CRRS0B,CeuCf,CAAqB,EP/BF,CYaC,ILkBQ,CAAC,AFlDtB,CAAa,CLmBd,CO+BN,EAAkC,AP/BJ,ARRpB,CQQJ,CKnBC,CbW0Bb,CQQC,AKnBN,GEkD5B,GP/BwC,CAAC,AKnBlC,CLmBiC,AKnB5C,CLmBE,CRRY,CAAmC,AoBqBZ1C,KpBrBiByB,AoBqBZ,CAACvB,MAAnB,CAA2B,CpBrBrC,EAAmD6D,MAAnD,CAA0D9C,EAA1D,CAAhB;AewCK,AZxCF,AKSA,AKnBD,APiCA,ACDJ,ALlBQ,AYmaR,AKtZAa,IN3BI,AM2BJA,KXVI,AMgaC,CPjZC,AYLA,CAACuC,IXRI,EKnBM,CAAC,ANgCJ,COiZd,EPjZiB,MMhCb,AM2BJ,CN3B4B,AM2BJ,CZKC,CAAC,CMhCtB,CAA4B,COgCH,CDL7B,CN3BI,CM2B4BC,CN3BK,AM2BJ,IAAI,EZKpB,CAAuB,CMhCpC,SNgCa,CAAjB,GaA0CrE,IAAb,CAAmB;AjBrB7C,AKSG,AKnBH,APiCA,ACDH,ALlBQ,AYmaT,AdvaG4B,AmBiBA,MnBjBAA,CMiB+B,CAQ/B,ACHE,EYLC,CAAC,EZKG,APtBA,CAACwB,CQSC,CDaC,AYLD6C,KXRM,ADaA,CCbX,CRTJ,AmBiBA,EAAkB,CXRE,ARTAhE,CQShB,CDaM,CCba,CDazB,CPtB2B,IAAI;AekBpB,APRH,AFgBN,AJrBM,AYuJV,Ad3JMyB,AmBiBA,KJAA,GfjBAA,IQSI,CWQCwC,EnBjBE,CQSC,GWQR,CXRY,OAAO,CAAP,CYaSnG,IZbI,CYaC,CAACkF,KAAM,CZbrB,GAAwB,CAAxB,GAA4B,MAAM,CAAC,CAAD,CAA1C;AO+BL,AZxCD,AKUK,AKpBL,APoCA,ACJF,APrBG,AmBiBA,EN5BD,KbSA,COuBE,CJtBK,CAAC,CAAR,GIsBQ,CMhCK,CAAC,GNgCD,SMhCb,ANgCF,CMhC6B,CNgCH,EMhCxB,CAA+B,MAAM,CAAC,OAAtC,EAA+C,QAA/C;AEmDD,AZxCA,AKUI,AKpBH,ANgCA,ALlBM,AiBcP,CJnBL,AZRA,IgBuBI,INxBS,GOiCDlF,KPjCN,AOiCW,CAACG,ElBnBA,GkBmBN,KAAgB,CAAhB,GACA,OlBpByB,GACrB,IAAI,CAAC,MkBmBJ,KlBnBD,KAAqB,oBADzB,4OkBmBA,GAEA,qBAAK,kNAAkN;AjBvBnO,AKSO,AKpBF,ANgCC,ALjBM,AFLN0B,AmBmBF,CN1DG,KbuCDA,GmBmBGwC,InBnBI,CAACpC,MEKI,CFLZ,GAAkBC,CmBmBpB,CAAsB,GnBnBG,GmBmBzB,CnBnB6B,CEKD,AiBcEoC,CAAC,EjBblB,EiBasB,EjBbN,CAAC,YAAjB,CAA8B,mBAA9B,CADL;AaoCZ,AP9BK,AFcC,ACFA,ALhBO,AFNLV,AmBmBF,MJqBA,EfxCEA,GmBmBGwC,EbKE,CJlBA,AFNC,CAAClE,GEMc,CAAC,CakCV,AfxCN,AmBmBR,CnBnBE,CMwBc,CSiBlB,CAAC,CTjBoB,IAAI,CAAC,CSiB1B,EAA+B,CbnCtB,CIkBP,AJlBwC,EIkBT,CSiBjC,EAA8C,IAA9C,KAAmE,KbnC1D;AaoCN,ATjBC,ACFF,ALhBM,AFNL,AmBmBF,EJsBE,GIxBH,ACLA,EL6BQ,Af3CN,Ce2CO,ATjBL,SAAS,ESiBV,CACI,AbpCO,OAAO,GAAG,IamCrB,CACmB,IADnB,EACyB,GbpCU,CAAC,GamCpC,EbnCqB,CAAqB,WAArB,CAAhB;AaqCP,APhCD,AKrBJ,ANiCM,ALhBM,AYoJV,Ad1JG,AmBmBF,ACMA,CLaH,GP5BI,CRlBO,CaHL,ANiCA,AP9BF,EQkBI,GDYG,CCZC,CMgJC,CPpIC,KCZK,ANJF,CMIG,AKrBA,ANiCA,CCZD,ADYE,CCZjB,CKrBmB,CAAC,AXiBZ,CAAW,IAAX,CWjBW,AXiBK,CKgBd,AOoIZ,CDrK8B,ANiCA,EOoID,GDrKR,ANiCT,CMjCd,ANiCM;AQsBN,APjCI,AKpBJ,APiCQ,ACDH,ALjBwB,AYqJzB,Ad1JD,WQUQ,CFaC,GEbR,CFaa,AJlBY,CIkBX,GJlBe,EAAE,GIkBvB,KAAmB,GJlBH,OIkBpB,EAAmC;AEZxC,AFaO,AJnBsC,AYsJ5C,AKvIF4B,ACpHiC,EDoHjCA,OLuIO,CRnIC,GaJG,EbIE,CAAC,AJnBgC,AiBehC,CLuIZ,GRnIM,CAAW,AJnBO,IImBlB;AACA,ACFN,ALlBmD,AYuJnD,Ad1JFE,AmBmBEU,EnBnBFV,EOqBE,MDEM,AQmIA,Ad1JA,CAAChE,COqBC,CAAC,GDEG,AJpBuC,AFH7C,CMuBO,CNvBC,CmBmBR8D,CjBhBkB,AYuJR,EPrIhB,COqI6B,EPrIR,AOqIrB,CAH2B,CAI3B,CRpIM,ECFN,AYFA,CbI4B,AaJV,IbIsC,CAAC,AaJlC9D,KAAL,CAAWiB,CbIvB,CaJN;AhBnBE,AKWJ,AFaO,ACFL,ALnByD,AYyJzD,Ad3JA,AmBmBD,ACKHmG,EZdE,MAAM,CLXQ,CHCNrE,CQUF,ADWG,GaGG,CAACsE,ClBtB8C,GKmBzD,EPrBiB,AoBwBrB,CAAsB,ClBtB8C,CFF5C,CEE8C,IFFzC9D,EGDvB,CACF,MiBwBJ,EjBzBM,AiByBkC+D,EjBxBhB,EHAA,EGDlB,AHCF,EGAgC,CiBwBpC,MjBxBoC,GAAqB,IADnD,EACuD;AAC3D,AKUE,AKrBJ,ANgCG,ALpByB,AFDxB,MaXE,EVWE,AKUA,ERVE5E,GQUG,ENTD,GMSR,EAAgB,CRVC,GAAGK,UaXU,CbWC,CAACL,CaXE,SAAD,CbWb,CAAwB,EaXW,GbWNjB,SAA7B,CAApB;AGAK,AKWH,AKrBJ,APiCM,AJrBI,AYyJR,AdzJAiB,AmBkBF2D,EN9BA,AM8BAA,EhBpBO,AHEL3D,KcyJK,EX3JO,AKWL,AWSA,CbGC,CHvBM,AGuBL,CJrBD,AiBkBE,CnBlBC,CQST,AKrBU,AbYAU,CaZC,APiCA,EEZE,ARTf,CMqBgB,ANrBApD,GEAC,CMSf,AKrBJ,CAAwB,ACqKtB,AdzJA,CMqBsB,AQoIC,CRpIA,AJrBF,EWZA,IAAS,ACqK9B,CZzJ4B,AYyJG,CRpIf,AJrBa,AYyJG,CAAD,CRpIvB,CQoI2B,CAAJ,EZzJV,EIqBkB,CJrBD,AYyJE,CZzJhC,EIqBJ,EAAyC;AHvB9B,AKYb,AKrBF,APiCM,ACvFiB,ALkEhB,AYyJL,AdzJH,AmBkBC,MhBrBe,GgBqBVkG,CN9BC,CLqBC,CMgJC,IAAI,AKvIZ,EXTE,CAAa,AKrBA,ACqKA,AKvIA,GN9BG,CM8BlB,CLuIoB,ONhJlB,CAA0B,KAAK,IAA/B,EAAqC,KAAK,CMgJ7B,CAA+B,CAA/B,EAAkC,CDrKhB,ACqKlB,CAAb,ENhJqC,AKrBrB,CAAmB,CLqBnC,kBKrBsD,CAAC,IAAD,EAAO,SAAP,CAAtC,CAAlB;AVSc,AKab,AFYK,ACDV,ALpBS,AiBkBL,KhBtBI,IgBsBCC,MAAL;AhBtByB,AKc1B,AKtBC,APkCM,AQmIJ,AdxJJ,AmBkBE,IhBvByB,IURrB,AbaAlC,EcwJE,AKtIAqC,ILsII,AKtIA,GN/BG,AM+BA,CnBlBf,CcwJiB,EdxJE,CabC,AM+BAC,MLsIhB,EAAwB,CDrK1B,CM+Ba,CN/BgB,AM+BAC,gBAAhB,CAAiC,aAAjC,CAAb;AhBvBI,AUPF,APkCI,AJtBF,AYyJA,AdxJJ,AmBkBAF,IAAAA,EhBxBkC,AUPhC,EM+BE,CAAC,CAAD,CnBlBG,AmBkBP,CAAQG,CLsIC,CX9JX,ADKW,CCNgD,AUN9C,AbaA/C,CGLb,AURc,CM+BZ,CjBnByB,CAAC,GFCnB,CAAY,EabjB,CAAoB,AXYb,IFCiBC,CEDY,EWZpC,CAA6B,ECqK3B,CAA6B,AdxJd,EAAgBC,CcwJ/B,CZzJA,AYyJiC,CDrKP,CXYoB,EYyJ9C,AdxJe,CabwB,CCqKA,CAAvC,EdxJ0C;AGJhD,AKjE6B,AKyDvB,APkCE,AJtBA,AFCJ,AmBkBH,UbGO,EJtBA,AFCEb,EabE,EPkCE,CAAC,AJtBF,CAAC,IAAN,CAAW,AFCE,GAAG,CEDhB,CIsBA,GAAqB,ANrBAQ,KMqBK,CAAC,GAAN,EAArB,INrBgB,EAApB;AQUN,AKvBe,APmCL,AJtBA,AYwJF,AdvJF,QcuJE,EDrKO,APmCL,EJtBA,AFCEb,EMqBE,GOnCQ,APmCL,CJtBD,AYwJE,CDrKM,AXaP,AYwJE,IRlII,AQkIf,AdvJe,CMqBC,AQkIA,EdvJEK,EcuJlB,EZxJE,EIsBO,CJtBe,CIsBtB,GJtBkD,AFCvB,CEDwB,AFCvBL,OED5B,IFCgB,CAAwB,KAAKjB,SAA7B,CAApB;AGLJ,AUTuB,APoChB,AJtBA,AYwJF,AKrIL2E,EAAAA,IhBxBI,KgBwBK,CNjCc,CVSZ,CgBwBC,IhBxBI,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AAC7C,AUVoB,APqCjB,AJtBA,AYwJF,AdvJC,AmBkBF,IhBxBA,CWuJA,ERrJiC,CA2B/B,CJhEA,AiB2DGF,EhBxBE,AHMD,CGNE,GDKC,AFCClG,CmBkBV,GjBnBa,AiBmBE,CnBlBb,GGNF,ADKiB,CCLG,ADKF,AFCC,AmBkBnB,IhBxBA,CHMwBG,GEDX,EFCM,CAAW+C,EEDC,IFC7B,EAAoC;AGLtC,AUXU,AXeuB,AFE7B,AmBkBJ,SAAKiD,GNnC4B,EbiBvBjC,CmBkBV,KNnCI,CADuC,CAEvC,KbgBmB,GAAGxB,WAAW,CAACyB,GAAZ,CAAgBnE,KAAhB,CAAtB;AGLL,ADGU,AYyJT,AKpID,QjBrBwD,GYyJhD,UAAP;ADtKI,APsCF,AJxBE,AYyJL,AdvJKkE,AiB3CR,QjB2CQA,EMsBE,IOtCI,APsCA,CAAC,CJxBD,GIwBJ,COtCU,AXcF,CFEG,CAACjC,CahBC,AXcD,CIwBE,GOtCG,AXcQ,CAAC,CFE5B,CahBe,APsCjB,EOtCE,APsCwB,AJxBxB,AFEwBC,KAAK,IAAI;AGLvC,AUVM,APsCA,AQkIN,AdxJQC,AmBmBRuE,AF9DF,EE8DEA,MhBzBM,AUVA,EbgBEvE,GahBG,CVUC,AUVA,APsCA,EaHE,ChBxBV,AHKW,AmBmBAnC,CNnCT,APsCU,ANtBAoC,CahBC,EPsCE,CaHL,CnBnBN,CAAcF,AmBmBA,ChBxBV,CAAC,AUXW,APsCA,COtCC,EbgBE,CAACG,KMsBT,CAAe,ANtBZ,CAAaD,KGL/B,AHKI,CGLsB,AUXb,CAAyB,MVWtC,CUXa,CVWsB,AUXjC,EAA8C,EPsCjC,CAAoC,IOtCjD,CAAuD,APsCD,COtCA,IAAe,CVWvE,CG2Be,CH3BsC,AG2BnD,IH3BF,EAA2D,KAA3D,CADJ;AAEA,AKWI,AKtBI,APsCF,ACLF,ALpBE,AFGC,AmBmBL,AF9DJ,MdsCM,AKWO,ADWA,EDKL,AaHDpC,CnBrBC,CadE,EPsCE,CAAC,AaHD,CjBtBA,AiBsBCG,ChBxBE,CUXC,CAAC,CVWC,ADEF,CMSV,ANTW,AiBsBV,CXbmB,AKtBhB,CAAW,CAAX,CNiCJ,AYEgB,CAAlB,EjBtBQ,AiBsBa,CjBtBA,CIyBjB,CAAqB,GCLU,CDKL,AJzBtB,CIyBuB,IJzBC,CAA5B,EAA+B,KKoBjC,CAA+C,CJtBL,CAAC,AG2BzC,KH3BwC,CAA9C;AACA,AKcA,AKzBO,ANiCP,ALpBQ,AiBsBJuE,AF9DN,CAAC,CToDC,ADQA,IJtBI,CctCC,CAAC,CJyBA,ANmCC,GAAA,CCRP,CAAY,GLdG,CDED,ECFI,CAAlB,AgBwBUiB,EXVV,CNZoB,CMYqB,ENZlB,CexClB,CAAN,EfwC4B,AiBsBvB,CjBtBwB,AiBsBP3F,EF9DW,GE8DN,CAACiB,EAAvB,AF9DkC,CAAC,CfwC/B,mBexC8B,CAAN,GAA+B,EAAhE,CAAD,EACK,IADL,CACU,OADV;AFqFM,AZ9CJ,AKWA,AKtBM,APqCA,ACJJ,ALpBM,AFEFiD,AmBoBH,AFvDL,KEqDI,ChBtBE,EHIEA,Ce0CQ,APnCd,EDWS,AYEA,EbEE,CEfX,CWaYlE,EJsBR,AZ9CW,AKWE,COmCM,Ab5CT,CKoBG,CJtBC,AG0BZ,AaFW,ChBxBE,AG0BA,ANtBA,AmBoBDG,ChBxBlB,AHIoBkD,Ge0ChB,ATpBE,ACJiB,ALpBF,CMSrB,AFewB,AaFZ,CJsBwC,Cb5C5B,EIwBlB,AaFqB,CnBpBrB,AmBoBG,CZFQ,ALpBW,CAAC,AiBsBC,CZFE,APlBAnB,IEFR,CAAW,AFEE,GOkBnC,CPlBuC,CAAE,CAArC,KEFkB,CAAhB,EWbsB,QAAxB,EAAkC,MAAlC;AE0DN,APjCE,AKxBG,APqCA,ACJJ,ALpBO,AFEH,AmBoBDwC,ON3CA,APyCA,EETG,IFaI,KEbT,ANXY,GMWK,AWWTkB,MjBtBa,GMWrB,ANXwB,AiBsBtB,CAAgB5F,KAAK,CjBtBQ,AiBsBPiB,CjBtBQ,CiBsB9B,KjBtBsB,GAAiB,CAAnC,CAH6B,CAI7B;Aa4CR,AZ/CA,AKcC,AKxBE,APqCG,AJvBE,AFCL,AmBoBA,KnB/BM,CAAP,GeqDK,AZ/CA,CY+CC,GTpBG,EH3BE,CAAC,IG2BR,CAAa,GH3BZ,CG2BD,CH3BN,AG2BwB,CSoBjB,CZ/CmB,CY+CsB,ATpBrB,ISoBpB,CTpByB,ISqBpB,IAAI,CTrBW,CAAe,GSqBrB,SAAV,GACP,WTtBuB,CACjB,ESqBQ,CAAC,CTtBQ,EACA,ISqBT,ATrBa,CAAC,CSqBH,GTtBF,EACW,IAAI,CAAC,OSqBzB,ATtBS,ESsB+B,ATrBN,ISqBlC,CADP,ATpB8C,GSsBrD,ITvBuB,CAArB,WSuBc,CAAC,OAAD,EAAW,iBAAX,CAHpB;AAID,AZlDG,AUVD,APsCI,ACLL,AOsIA,AdxJC,AmBoBA,EZFD,CM9CA,CVuBE,WAAW,KIuBK,GAAA;AQsCpB,AZ5DI,AKcF,AKxBD,ANiCG,ALpBM,CW5BV,CLuCE,QLdQ,AKcA,ADSA,CCTC,KAAD,CNXK,CMWU,ADSP,EJvBE,CIuBC,ALpBF,CAAC,CCHG,EDGA,CAAb,CKoBiB,CLpBD,CCHG,ADGF,CCHG,EDGA,SCH1B,ADGM,EAA+B,CAAC,CKoBrB,CLpBX,CKoBN,CLpB0C;AMY1C,AFaE,ACJF,ALpBQ,AFvHH,AmB6IP4E,AFxDF,EEwDEA,IbEI,AW1DA,ET6CE,EDSE,EYEE,CXXC,AWWA7F,EbEE,ECJE,CCTC,ANXF,AiBsBJ,EZFQ,AYEA,IjBtBR,EelCc,EVsDE,CAAC,AUtDA,EAA7B,CT6CQ,IDSJ,CCT2B,CAAC,WAAW,CAAC,KAAD,CAAZ,IAAuB,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;ALdzE,AKeE,AKxBN,APqCK,ACJD,ALpBQ,AYwJF,AKlIP0E,AFvDH,MJoBM,EVSE,CW4JS,CPpIP,CCTC,KAAL,ELfY,ADIF,CMWG,ANXF,AiBsBRmB,CNnCW,ANiCA,ELpBA,CCJG,AUTA,ANiCA,CCTjB,CADuE,CAEvE,CKzBqB,EXaA,AiBsBxB,ChB1BC,AUTmB,ANiCO,ALpBF,AiBsBR7F,CZFW,ALpBJ,AYwJjB,CX5JsB,AUThC,AXaY,EYwJ2B,CKlId,CAACiB,EAAvB,GZFC;AJvBE,AKgBA,AKxBN,ANgCI,AOoIA,AdvJJ,AmBqBG,IZFC,EJxBE,AHKAM,KOmBK,CAAC,KJxBK,AHKA,GGLG,AHKA,GOmBhB,CAAoB,MJxBM,CAAC,GIwB3B,CJxB0B,CAAxB;AACA,AKgBA,AFYF,ACJA,ALrBQ,AYyJR,AdvJF6C,EAAAA,IGLI,EG4BE,AQgIA,CAAC,IX5JI,CAAC,AW4JA,AdvJA,EAAE,EEFA,CAAC,CFCG,IGJd,ADGgB,CCHI,AG4BtB,CJzBQ,CIyBU,CCJJ,ALrBQ,AYyJjB,CACG,MPrIR,EJxBE,AIwBqB,CJxBY,IAAjC,EAAuC,GIwBR,CAAC,GJxBhC,GW6J+B,CAAC,GPrIlC,eOqIiC,EAAqB,IAArB,CAD5B,CAAL,EAC8D;AX5J7D,AG4BC,ACJF,ALrBU,AY0JR,AdxJJlB,AmBqBAiC,EnBrBAjC,AmBqBAiC,IbEI,ENvBE,EAAE,COmBC,AOqIA,EKnIE,CbEC,AaFAnF,CbEC,CJzBD,GKqBV,AYES,EAAQmG,CjBvBD,EIyBd,CAAmB,AJzBF,EY0JjB,AKnIO,EAAgB,CLmIC,GRjIxB,CQiI4B,GZ1JC,AY0JL,EZ1JhB,AY0JR,CAD4D,CAE5D;AN9IA,AFaA,ACJH,ALrBU,AFDO,AmBwBhB,CnBxBJ,KM0BM,IEbI,AWWAjB,CXXC,INdC,AiByBG,GAAGiB,EbEE,CAAC,AJzBF,GiBuBK,CAACjB,GbEnB,CAAuB,CaFX,IAAgBlF,GbE5B,EEbiB,AWWgB,CAACkF,IXX7B,CAAL,AWWF,EXX2B;ALf3B,AKgBI,AFaH,AJzBS,AY0JR,AdvJN,AmBoBI,MnBpBEvD,EAAE,EmBoBEgF,ChB3BC,AHOA,CcuJC,CN9IC,ERTEvF,EAAJ,AmBoBM,CnBpBCG,EGPE,AgB2BA4E,EXXZ,ANZY,CMYG,ELhBE,CAAC,AgB2BA,ChB3Bf,ADIc,AY0JE,AKnIAS,CXXnB,CRTG,CEHiB,AY2JlB,AdxJV,CGP+B,AKgBA,GWWX,CXXZ,CLhB4B,AW+JpB,CX/JqB,AW+JpB,CKpIqBzH,IAAI,CAACC,GhB3BP,CAAL,CAAiB,AgB2BV,CAAWY,ELoIvC,CZ3JwC,AY2JlB,CX/JD,ADIoB,CiBuBG,CAACE,CLoI7C,CZ3JkB,CCJ8B,ADIF,AY2JlB,CZ3JV,CAAd,CiBuBmC,GAAe,IAA1B,ChB3BlC,EAAmE,CgB2BC,ELmIlE,AKnIF;AhB1BE,AKgBC,ADL8C,AYgBjD,UAAM2G,OAAO,GAAGV,MAAM,CAACW,OAAP,IAAkB3H,IAAI,CAACC,KAAL,CAAWY,KAAK,CAACE,MAAN,GAAe,EAAf,GAAoB,IAA/B,IAAuC,EAAzE;AhB1BE,AKgBD,AFYD,AJzBU,AY2JR,AdxJNyB,AmBqBI,EnBrBF,CAACN,OGNO,AW8JA,AdxJV,AmBqBU0F,CbCC,ENtBE,KmBqBK,CbCd,ANtBe,CEHD,CCHG,AgB2BAZ,GhB3BG,CAAlB,ADGiB,AY2JE,EX9JE,AgB2BA,CAACa,EjBxBA,AY2JE,GKnIT,CjBxBH,GiBwBmB7H,CjBxBD,CY2J9B,EAAmC,AKnIA,CAACC,IjBxBE,CAAC,AiBwBR,CAAWY,IjBxBE,CAAC,AiBwBE,CjBxBH,AiBwBIE,CjBxBV,EAAW,GiBwBP,GAAe,EAAf,GAAoB,EAApB,GAAyB,IjBxB7B,AiBwBP,CjBxBvB,AiBwBV,EjBxB0E;ACFtE,AKgBL,AFYA,AJzBa,AY2JR,AdxJN4B,EAAAA,McwJM,AdxJA,CAACuC,MGNM,GDGC,CAAC,GAAG,CAAC,AY2JE,CX9JC,ADGF,AY2JE,CdxJtB,CAAwB,GGNG,ADGT,CCHU,ADGF,CCHpB,ADGY,AY2JZ,CACI,CX/JqB,ADGF,AY4JlB,CAAD,EAAyB,CAAzB,CZ5JwB,CAAC,AFGnC,EAAuCC,Cc0JzB,Ad1J0B,EEHtB,EFG0B,Cc0JzB,CZ7JyB,KAAK,CAAC,CAAD,CAA/B,GACA,IY4JJ,CZ5JS,AY4Jc,CZ5Jb,CAAD,CAAL,AY4JJ,CZ5Ja,AY4Jc,CAA3B,EAA8B,CAA9B,CZ5JI,AY0JZ,CZ1J2B,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;Aa0DV,AZ5DI,ADIK,AY4JR,Ad1JH3C,AmBqBA+C,AFxDE,IjBmCF/C,EAAE,AiBnCO,CjBmCN8B,EesDS,CZ5DN,KAAK,CAAC,AHMZ,AiBnCE,GjBmCac,AmBqBTY,InBrBN,CAAoBX,CesDlB,AZ5DS,Ac7BiB,CFyFC,AZ5DvB,CAAiB,GgB2BvB,CAAkBxE,ChB3BZ,AHMsB,CesD1B,EAAgE,CZ5DlC,AHMA,AmBqBT,CAACiB,EAAxB,EAA4B,MhB3BtB,Uc7BJ,CAAyC;AF0F7C,AZ5DQ,AKgBR,AFvH2B,AQuQxB,Ad1JC,AmBqBAiE,AFlBJ,ETOA,IWWIA,EXXE,CO4CC,CZ5DC,CKgBF,AWWG,CnBrBCT,CmBqBCS,GnBrBG,CesDC,CAAC,AIlCc,ChB1Bb,AHMA,GGNG,sBHMU3D,QGNoB,CAAC,EHMV,CAAC2B,EGNQ,EAAQ,EHMzC,EAAiCsB,KGNA,CAA1C,EHMS,CAAb;AesDa,AZ3DV,AKgBL,ANbU,AY6JX,Ad1JG,AmBqBAtE,IJgCa,EIhCbA,KXXK,CRVCU,AmBqBA,CJgCgB,CI/BnB+F,CJ+BqB,CbxDhB,IawDI,CI/BF,CjBzBI,EiByBD,CjBzBI,AFGE,GAAGlC,AmBsBpB,GACCoC,CnBvBuB,CEHD,AFGE,CEHD,AFGA,CAA1B,GmBuBU,CXbO,EWaJ,EAAV,CXbmB,EWaJ,EjB1BD,CMaZ,ANboC,CMa3C,ANbmB,AiByBf,CjBzBM,CMasB,CWc3BE,QAAQ,GAAG,EAAX,GAAgB,EAAhB,GAAqB;AJ6BO,AP1C/B,ANbO,AY8JX,Ad3JI,AmBkB0B,IJkCK,CIlCjC,OXRQ,ARVAlG,EeoDmC,EAAE,KP1C5B,EO0CmC,AfpDjC,CQUC,ERVE4D,EeoD8B,CP1C3B,CRVC,CAAC,CeoDkB,AfpDnB,CAAxB,CQUA,EO0C2C,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE;AAAxC,AZ1DV,AKiBF,AWeH,GJ0Bc,CAAf,OPzCS,KAAL,GAAa,cAAb;AO0CL,AZ1DM,AKiBD,ANdM,AFIN,MQUA,KRVK,GEJC,CMcG,ARVAzE,CQUC,IAAD,ANdG,AFIZ,CQUA,ANda,GFIKY,SEJZ,CAAoB,GFI1B,EAAiC,CEJ3B,EAA4B,IAA5B;AayDZ,AP1CK,ANdO,AFIJe,AmByBNsF,EAAAA,MnBzBMtF,AmByBA,EnBzBE,CAACmC,AmByBA,QjB7BM,GFIT,CAAe9D,CEJX,CAAW,GFIK,CEJhB,AFIiBiB,CEJD,CFIpB;AGPF,AUNN,AXS6B,AFKtB,AmByBH,AFtBF,MdXI,AUNA,GIiBG,CEsBCjB,KhBjCK,AgBiCA,CjB9Bc,ECHX,AgBiCA,AFtBhB,EfR+B,CeQf,CfRiB,CiB8BZA,INvCI,CXSC,AiB8BxB,ENtCA,CAAC,SAAD,EAAoB,MVKwB,CAAC,IUL7C,CVK4C,CULO,CVKC,OULpD,EVK4C,CAA1C,EULwE;AVMzE,AKiBD,AKtBE,AXOqC,AeSvC,EJhBE,MLsBE,GSNG,ETME,GKtBO,AXOuB,AeS3B,CJhBK,CLsBb,EKtBF,CAAmB,AXOuB,CeS5C,CTMmB,ANf2B,EAAE,KWP9C,EADwE,CAExE,ILqBF,EAA6B;ALhB9B,AKiBG,AKrBA,AXKsB,AFMtB,AmB0BF,AFtBD,QEsBI,CAACA,EnB1BG,GmB0BP,CjBhCQ,AFMGA,CmB0BA,InB1BT,IAAkBa,WAAlB,EAA+B;AGNpC,AKiBI,AKrBC,AXKK,AFMHc,AmB0BF,AFrBJ,QjBLMA,EAAE,CAACqC,EE3B4B,AiBqD1B,CjB/BH,KFKF,CAAYhE,KAAZ,SmB0BU;AjB9BR,AFKH;AQUH,AKrBE,AbYD,KAXD,GaDQ,CLqBH,SAAL,CAAe,IKrBQ,ELqBvB,CKpBM,CAAC,CAAC,QAAF,GAAa,QAAQ,CAAC,OAAtB,GAAgC,QAAQ,CAAC,aAAT,CAAuB,UAAvB,CADpC,CALwE,CAOxE;ALoBH,ARTA,AiBGO,ALpHV,GZoGE,MiBgBe,gBAAP,GAAuB;AJb3B,AXII,AFOR8B,AiBGE,EjBHFA,MaXU,AbWJ,CAACuC,KaXS,EXIJ,CWJO,MXIA,CAAC,CFOpB,CAAwB,EaXM,CAAC,GbW/B,CEPmB,CAAP,AFOoBC,CAAC,IEPE,AFOE,EEP7B,EAA+B,EWJpB,CAA6B,OAA7B,CAAf;ALXoB,AKYpB,AXIM,AFOR3C,AiBGA,ALrHJ,IZkHIA,EAAE,CAACsC,CaXK,AIcJ,KAAK,CfVD,GFOR,GEPc,CAAC,MeUX,CAAoB,KfVhB,CAAoB,YAAY,EAAhC,EAAoC,GeUK,CfVzC,AeU0C,SAAD,EAAY,IAAZ,CAA7C,CAAJ,EAAqE;ATOzE,AKrBa,AXKD,AFOT,AiBGG,GjBLJ,CaVW,UXKD,aAAa,CAAC,IAAd,CAAmB,IAAnB;AWLA,AXMD,AFOTtC,AiBGG,ALpHL,EZiHEA,EAAE,CAAC8B,AiBD4B,CJZV,AIiBnB,MJjBE,CATwE,AXYpE,CWFJ,AbYJ,GAAec,EEPA,EFOf,CAAoBrB,MAAM,IAAI;AENnB,AFOT3B,AiBIA,IjBJAA,UEPS,CFOE,CAAC2B,EEPU,CAAC,GFOvB,CEPS,EFOYA,CEPS,KFO9B,EEPqC,CAAC,SAAD,CAA5B;AWLP,AXMK,AFOPwB,AiBIA,ALrHJ,IZiHIA,EabM,GbaD,CAACC,EabM,CXvBuB,CA8B7B,GWPW,CAAf,AbaF,CAAepD,CabK,UbapB;AaZI,AbaL,AiBIC,GjBPF;AaTM,AbaP,AiBIG,ALtHJ,CZ4FA;AaUQ,AXKE,AeYN,OEUE,KjBtBI,SAAS,IAAI,SAAb;AWJF,AXKC,AFQTqD,AmB0BK,AP7IL,WZmHW,CAAC,YAAY;AaZhB,AXKD,AFQL,QAAMzE,CE3CK,IF2CA,EERA,CFQG,GERC,GFQKuE,CERD,CAAC,GFQK,CAACG,IERX,IFQK,CERa,CFQjC;AaZM,AXI6B,AiBmCjC,AFxBA,ALrHJ,QO6IQ5E,EFxBE,EEwBE,GAAGD,KAAK,AFxBA,CEwBCE,EFxBE,IEwBnB,CFxBwB,SAAL,EAAnB;AJdI,AXGK,AFUX,OAAK,CEVuD,GFUnDF,KAAT,IAAkBG,KAAK,CAAC+C,MAAxB,EAAgC;AaZ1B,AXGA,AYoKN,Ad1JE,AmB0BA,AFxBA,ALtHJ,QO8IO,AFxBC,CHwJC,AKhID,CnB1BEjD,GiBEG,CfZA,AFUC,AmB0BDiG,AFxBC,GjBFGlG,CEVY,CAAC,EiBoC1B,AFxBI,CjBFc,AiBEA,CfZT,AYoKX,Ad1JqBE,AmB0BD,CLiIhB,IZrKiC,AYoKrC,Cd1Je,Cc4JX,EG1JE,CjBF0BE,AiBE9B,CfZI,CeY2B,CfZY,CYsKzC,Ad5JgC,CAACC,Ec4JF,Cd5JH,KAAaL,KAAK,CAACM,SAApB,GAAiCN,Ec0JhE,EAE6D,Cd5JQ,CAACO,QAAvD,CAAb;AQME,AKlBE,AXGE,AYsKN,AKlIEN,AFxBA,MTGO,AWqBPA,IAAI,GAAG,CXrBP,CAAe,GNfL,MAAM,GAAG,IAAI,CAAC,MiBoCJD,IjBpChB,CADqC,AiBqClC,CjBnCH,AiBmCJ;AXdJ,AKxBM,AXIE,AYqKN,Ad5JA,AmB0BC,AFxBC,ALvHN,EJgIE,MRXMC,IAAI,CQWV,CAAY,ERXE,CAAZ,EAAe,EQWjB,EAAkC;AAHlC,AKpBM,AXIE,AYqKN,Ad5JED,AiBEA,IJfE,EbaFA,GQOJ,CKpBY,CAAC,AbaJ,CAACG,EQOV,GAAiB,ARPb,EabE,CAAiB,AbaL,CAAd,CADa,CAEb,GQMJ,eKpBM,CAAuC,eAAvC,EAAwD,SAAxD;ALqBE,AKpBF,AXIE,AYqKN,Ad3JC,AmByBD,AFxBE,ALtHN,SJ2HU,AMqJD,CKlICjB,IAAI,GAAGC,IAAI,CAACC,CXnBZ,GAA0B,CWmBnB,CAAWa,GLkIxB,CKlI4B,GXnBtB,AWmByB,IAAlB,IAA0B,EAAvC;AXhBA,AKtBG,AbcJ,AmByBC,AFxBE,STOG,CWiBCiH,IAAI,EXjBV,CWiBa/H,EXjBE,EWiBE,CAACC,IXjBlB,CWiBa,CAAWa,IAAI,GAAG,EAAP,GAAY,IAAvB,IAA+B,EAA5C;AXhBD,ANnBO,AYqKN,AKjIA,AFxBE,ALtKN,SE+TS,CKjIC+G,KAAK,CjBpCD,EiBoCI7H,EjBpCA,CAAC,CiBoCG,CAACC,ELiInB,CAAuB,EKjIT,CLiId,AKjIyBa,CLiIE,GKjIE,CLiI7B,EZrKU,AYqKuB,AKjID,EAAP,GjBpCU,AiBoCE,ELiIrC,AKjIyB,EjBpCf,AYgKiD,CAM3D,AKlI0C,GjBpCC,CiBoC7B,CAAd,GjBpCgD,KAAK,aAA/C,EAA8D;AMqBtE,AKxBI,AXIM,AYsKR,Ad3JF6B,AmB0BE,AFzBE,EjBDJA,MafU,AbeJ,CAACgD,EmB0BE,CFzBC,EfZA,KAAK,EeYI,CJhBK,AbexB,CAAqB,CiBCC,CJhBK,AIgBJ,EjBDEC,IiBCH,CjBDD,AmB0BP,CNzCqB,AbeJ,AiBCgB,CJhBX,EIgBd,GjBDD,CAArB,CiBEkC,MJjBP,AIiBa,CJjBU,AIiBT,OJjBd,CAAvB,CAzBwE,CA0BxE,CIgB8B,CACtB,CAAC,GAAD,EAA8B,CAA9B,KACI;AF+CZ,AFhEA,AXGM,AYsKR,Ad3JH,AiBIa,CjBjBH,EAaR,GiBIW,CjBjBH,CAAX,Ce+DgB,EE9CG,CAAC,EF8Cd,Ab7DM,Ca6DU,IE9CR,CffI,AeeU,CffT,AeeL,EF8CR,EAAkC,AE9CP,KF8C3B,EAAiD,Cb7D3C,CAAoB,AeeU,CAAC,CAAD,EAAI,GAAJ,CAA5B,Iff8B,AeeU,Eff1C,Cee6C,CffT,AeeU,GAAJ,Cff1C,AeekD,CAAR,GAAY,GAApD,CAHsB,EAItB,GAJsB,CAD9B,CAP6B,CAa7B;AF6CJ,AFhEI,AXGK,AYsKP,AGrJE,SF4CG,CAAC,iBAAD,EACC;AACA,AFjEJ,ACyKF,Ad3JW,EemDL,IAFD,AfjDYL,KemDgB,AfnDtB,CAAY,gBmB0BCJ,CAAC,IAAI,KAAKR,WAAL,EAAmB;AJ0BhD,AFjEE,AXEI,AFaR,SAAOa,CekDC,Eb/DA,KFaR,CAAgBxE,EekDE,GAAG,AflDrB,EEbqB,AFaE,GEbC,KAAhB;AagEJ,Ab/DI,AFaN2B,AiBGE,IjBHFA,EekDE,GAAG,CflDC,CAACgD,CekDF,AE/CG,GAAG,EfhBA,CegBG,IfhBR,CAAW,CFajB,CAAqB,EEbf,AegBiB,CfhBD,AegBE,CjBHCC,KAAJ,CAAU,GiBGR,EAAa,IAAI,GAAJ,CjBHf,CAArB,AiBGuB,CAArB;AFgDE,AFlEF,AXEqB,AYsKvB,AdxJD,AiBGG,OJnBK,CCwKH,GDxKO,CAAC,AImBJ,EfjBe,CagEZ,AFlEI,ACwKJ,CDxKT,ACwKU,EDxKM,AXES,AeiBb,CJnBK,CEkEH,AbhEa,CeiBS,CJnBhB,CImBpB,GfjBoB,AYsKlB,EDxKF,EEkES,AFlEmB,ACwKJ,CCtGC,AFlEI,EAA7B,EAAiC,ACwKJ,SCtGpB,ADsGe,CCtGe,ADsGA,QCtG9B,CAAP,KDsGsB,CAA8B,IAA9B,CAA1B,EAA+D;ACrG5D,AP5CL,AKtBM,AXCiC,AYuKnC,AGrJA,ETGJ,ISHI,CF4CiB,EE5Cd,CJnBK,AImBJ,ETGE,CAAC,CNrB4B,CWDtB,EImBb,CJnBgB,AImBH,CAAD,GTGN,CSHa,CTGG,AKtBA,CAAC,CAAD,CAApB,EImBuB,CAAC,OAAP,CAAe,CAAf,CAAnB;ATIF,AKtBI,AXAkB,AYwKrB,AdxJH,AiBGI,IJnBE,KLsBC,AKtBI,CAAC,CImBH,EfnBD,EAXqC,AF2BhCF,CEfL,EMqBN,ASHE,EJnBE,CLsBa,AKtBK,AImBL,EjBHnB,GAAwB,CiBGpB,GTGwB,CAAC,CKtBvB,CAA8B,KAA9B,ILsBa,CAAsB,6BAAtB,CAAjB;AO4CE,AP3CF,AKtBI,AXCE,AFeN,AiBGC,IJnBG,CIAJ,CFiEE,GP3CG,ERNEtD,AiBGA,KF8CK,AP3CZ,EO2Cc,AFjEI,CLsBH,AKtBI,GE6DA,Af7CnB,MQMwB,AWmBA+C,CXnBC,AWmBA,CNzCrB,GMyCyB,CNzCM,IMyCD+B,CNzCM,CLsBzB,AKtB0B,CLsBJ,MWmBR,EAAiB,ENzC1C,mBLsBW,CAAf;AO4CE,AP3CH,AKtBI,ACuKH,AdvJD,AiBGG,GJtDwE,CAoCxE,EEgEA,IDsGI,CGpJC,EHoJE,GAAG,ECtGE,AE9CZ,EF8Cc,CE9CC,EHoJE,IAAP,IGpJe,CHoJC,IGpJI,IHoJpB,GAA2B,EGpJtB,GAA2B,CHoJC,CGpJ5B,CHoJL,EGpJqC,CHoJC,AGpJA,KHoJK,IAAI,CGpJV,CHoJjD,AGpJE;AFyCiB,APpCrB,ANvBQ,AYuKN,AGpJC,KFwCD,AE1E6B,CAoC7B,IHkJM,MZvKI,IAAI,AYuKE,CZvKD,EYuKI,KAAK,IZvKd,KAAqB,IAAzB,EAA+B,MYuKlB,CAA2B,IAA3B,EAAiC,GAAjC,EAAsC,OAAtC,CAAnB;AZtKS,AFgBX,AiBKE,cfrBS,CFgBErB,GEhBc,CAAC,IAAjB,GAAwB,AFgBnC,CAAyBC,CEhBd,MFgBqB,GAAG;AeiDjC,AFjEE,AXCK,AYsKP,AdtJA/E,AiBKA,AL3KJ,ECqJM,EbiBFA,IegDI,ADsGA,EdtJE,EAAE,CegDR,AblEM,EakEK,GDsGG,CZtKD,AFgBE,EADkB,EcuJd,ODvKW,CAAC,CCuK/B,EAA8B,MDvKA,CAA5B,CArCwE,CAsCxE;AEiEA,AFhEA,AXAM,AYsKN,AdvJiB,AiBMnB,MHiJE,MCtGM,ADsGA,CAAC,CZtKD,CagEG,GAAG,OAAO,EbhEA,AYsKnB,CZtKoB,AYsKE,CCtGV,GbhEN,CAAmB,AYsKE,CCtGC,GbhEtB,KagEM,ADsGZ,EAAsC,CCtGC,GDsGvC,EAA4C,CCtGC,EAAjC,GAAsC,IDsGlD,CCtGuD,IAAI,EAA3D;Ab/DM,AYsKP,AdvJDgF,AiBMA,IjBNAA,KAAK,EAAE,GEfC,IFayB,CEbpB;AagEX,AFhEA,AXCK,AYsKR,AdvJC5E,AiBMA,IjBNAA,EegDE,EFhEM,KbgBC,EahBM,AbgBJ,CegDC,AfnDqB,CemDpB,CFhEK,EEgEhB,GAAiB,UFhEc,CAAC,CEgEf,MFhEjB;AEiEE,ADwGN,AdxJEH,IAAAA,KAAK,EAAE,CegDE,AfpDwB,KeqDS,GADjC,MACoD,SADzD,EACoE;AAChE,AFlEN,AXCI,AFgBNI,IAAAA,EajBM,CAAC,CAAC,IXCF,AFgBE,EAAE,CeiDkD,CFlE1D,EEkEM,AFlEU,GXCH,CakEJ,KAAK,UAAL,CAAgB,aAAhB,CAA8B,QAA9B,CADL;AAED,AFnED,AXCC,AFU4B,AiBUjC,GjBVF,EAMG,IiBII,EfzCD,KeyCJ,CfpBW,EeoBI,KAAK,CEsBC,CAAC,KAAK2F,AFtBZ,CAAa,GAAb,CAAkB,CAAD,CEsBG,GFtBG,OJrBX,QAAvB,EAAiC,cAAjC,EAAiD,OAAO,CAAC,UAAzD;ALwBN,AKvBK,AXCG,AFgBN,AiBIE,ETEJ,CKzBI,MAEO,CbiBH/F,AiBIA,CAAC,IjBJI,CEhBD,CMsBG,ANtBF,CMsBG,ARNA,EEhBA,CMsBD,ANtBE,CAAT,AiB0CYmE,CXpBK,AWoBJ,AFtBA,CjBJC,GmB0BG,EnB1BEO,GmB0BGM,IFtBtB,CjBJc,EAApB,CiBIoC,CAAC,EEsBd,CAAiBnF,KAAjB,EAAwB,yBFtB7C,EAAgE;AF8C9D,AP3CJ,AKvBI,AbiBJiF,AmByBiD+B,AFrB7C,IJrBA,AbiBJ/B,EmByBiD+B,GXnB5C,EKvBM,AbiBJ,AmByB+C,CN1C1C,AbiBJ/F,CmByBgD,CnBzBxD,AmByByDqD,CJyBjD,AIzBkD,CAACjC,CnBzB9C,CQMb,EO4C4D,CP5C3C,CWmBwC,CJyBjD,AIzB0D8E,CJwB9D,AP3CJ,AKvBI,CAAqB,YbiBzB,EajBI,EAAqC,OAAO,CAAC,UAA7C;AEoED,AP5CH,AKvBG,AXAG,AFiBNhH,AmBwB+C,AFpB3C,GJlEsE,CA8CxE,AbgBFA,CmBwBuB,CAAoD,CJkBzE,EPpCG,ARNA,CAAC+C,MQMN,ARNA,CAAahC,EQME,ANvBF,CAAC,CAAC,AFiBf,CQMkB,ARNA+D,CQMC,CNvBA,IAAgB,CAAC,AFiBpC,IEjBmB,CMuBnB,ANvByC,OAAtB,CAA8B,MAA9B,EAAsC,CAAC,GAAG,CAA1C,CAAN,MAAwD,CAAC,CAAhE,EAAmE;AaoExE,AP5CF,AKtBG,AXDM,AFiBR,AiBII,SjBJCN,QAAL,CAAcxE,ImBwBI6G,CnBxBlB,ImBwBuB,CAACzH,QAAN,GAAiBC,QAAjB,CAA0B,CAA1B,EAA6B,GAA7B,CAAkC;AXhBtD,AKvBI,AXDM,AFiBT,AiBIK;AF8CJ,AblEQ,AeqBJ,WF6CI,GE7CE,CF6CE,KAAK,CE7CA,GAAG,KF6Cb,AE7CkB,CAAC,EF8CtB,OE9CgB,CAAgB,GF8CrB,CAAC,CE9CI,CAAsB,IAAtB,CAA2B,CAAC,CAAC,CF8ClC,EAAa,KE9CR,EACK,MADL,CACY,CAAC,EF6ClB,CE7CiB,CF6CyB,CE7CnB,GF6CvB,CADR,AE5CyB,GF8C5B,EE9C2C,GAAG,GAAG,IAAI,CF8CxC,AE9CyC,CF8CxC,ME/CE,EAC+C,EF8ClD,AE/CG,CAAhB,CF+C0B,iBAAb,CAFjB;AAGD,AbpES,AFiBV,AiBKM,AL1KR,GG+LE,Yf1Ba2F,AiBKA,WjBLb,CAAyBC,OAAzB,EAAkCH,EiBKX,KjBLvB,EAA2C,AiBK9B,CAAP;AF+CP,AFrEK,AXCM,AFiBR,AiBKG,EFgDP,AFvEM,MAAM,CAAC,CbkBH9E,KAAK,EalBT,CAAiB,AbkBL,CEjBD,KAAL,AFiBY,CEjBD,IAAX,AFiBiB0E,CEjBD,OFiBJ,EalBlB,AbkBF,CalByC,eAAvC,EAAwD,SAAxD;AEwEN,AFvEM,AXAuB,AFkBzB,QalBQ,EbkBF7E,GalBO,EbkBF,CalBK,AXAS,EFkBX,EElBe,EAAE,CWAR,CAAC,AbkBJ,CmBwBC,CAAC,EjB1CE,CFkBCqF,EmBwBEa,MN1CX,CAAsB,AM0CH,GnBxBf,CAAkBd,GalBtB,CAAd,GbkBkB,CAApB;AesDJ,AbxE2C,AFmBvC,AiBIE,UjBJIE,GiBIG,CAAP,CjBJS,CEnB4B,EFmBzBnF,GEnB8B,CiB2C1BmE,CjB3C4B,AFmB3B,AmBwBA,CjB3C4B,AFmB3BpB,GmBwBG,GnBxBT,CAAaqC,CmBwBCJ,MnBxBd,CAAqBnF,ImBwBZ,CnBxBT,AmBwB0BA,CnBxBxC,ImBwBuB,EAAwB;AJ8BnD,AFxEM,AXDsB,AFoBxBG,AmBuBiD2G,AFnBhD,ALpKL,IZgKI3G,CiBPe,CJZT,AM0C2C2G,AF9BjD,GjBOK,CAAC5D,EanBM,CAAC,AM0C2C,EjB3ChD,AiB2CkD,CnBvB1D,AmBuB2DoB,CnBvB9CgB,AmBuB+C,CAACjD,GN1CvD,CAAiB,AbmBvB,EmBuB2D,CAAS8E,CnBvB9C3B,MAAM,CAACC,CanBvB,IAAiC,CbmBjB,CAAczF,GanBQ,EbmBtB,EAAqBiF,CanBM,IAA/C,EAAqD,AbmBjC,CAAtB;AesDJ,APhDE,AKxBM,AXDI,AFoBR,AmBsB+C,AFlBhD,ALnJH,EJoJE,GWiByB,CAAsD,GnBtBxEN,KEpBG,EMyBI,CAAC,ARLb,CAAcxE,GQKF,EAAe,ANzBV,AFoBjB;AQMA,AKxBI,AXDG,AFoBR,AiBaD,AL5JF,IJoJI,IAAI,CAAC,QAAL,CAAc,IWiBI+G,CXjBC,GWiBG,CAAC3H,KXjBT,GAAiB,AWiBb,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC,UXjBnD;AOgDJ,AFvEQ,AXDC,AU3HT,IC4HQ,WAAW,CAAC,YAAZ,CAAyB,KAAK,CAAC,SAAN,CAAgB,IAAhB,CAAzB,EAAgD,WAAW,CAAC,UAA5D;ALwBJ,AKvBG,AXDA,AFoBL,AY/IF,GCwHM,CL2BF,AInJA,IJmJI,CAAC,AKvBI,ED5HF,EC4HM,CAAC,CAAC,AbmBJsE,EQIX,AInJA,CJmJc,IInJI,CJmJC,AKvBV,EAAgB,CbmB3B,CAAyBsB,GQIT,GAAe,AInJjC,CZ+IE,CY/IiC,CZ+IC,0BQIhC;AACD,AKvBK,AXDH,AFoBD,AY/IF,GAAC,EVhB+D,CA6I9D,GU7HK,CZ+ICpF,AY/IA,KZ+IK,GAAG,MAAM,GY/If,CAAN,CZ+I0BqF,IY/II,MAAM,CAAC,CZ+IhB,CAAkBD,OAAlB,CAApB,OY/ImC,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AJqJA,AKxBM,AbmBJ,AY/IH,UZ+ISjF,KAAK,GAAG,MAAM,KAAK0E,QAAL,EAApB;AalBI,AbmBJ1E,AY9IJ,IZ8IIA,KAAK,CAAC+C,MAAN,CAAawC,MAAb,CAAoBvF,CmBsBC,CAAC,GnBtBG,CAAC+C,CmBsBCgD,KnBtBP,CAAaX,CmBsBE,MnBtBf,CAAqBvF,KAArB,CAApB,EAAiD,CAAjD;AalBI,AXDJ,AFoBA,SEpBK,AFoBA2E,MEpBM,CAAX,CFoBA,CAAcxE,EEpBE,EiB0CEmE,CnBtBlB,AmBsBmB,IAAI,KAAKa,CjB1C5B,EAA+B,QiB0CR,CAAiBnF,KAAjB,EAAwB;ANxC3C,AXDF,AFoBH,AmBqBkD4G,AFVzC,EAAA,If/BN,AiByC+CA,CjBzC9C,CAAC,Ie+Bc,CEUsC,EAAE,AFVxC,CEUyCtC,CAAC,CjBzC1D,AiByC2DjC,CjBzC7C,KiByC2C,CAAS8E,KjBzClE,CAA0B,CAA1B;AWEE,AXDH,AiBwC8C,AFT/C,KESuB,CAAsD,IFTvE,UAAN;AJ7BI,AXDL,AFoBD,eAAaxB,OmBoBOzG,GnBpBpB,CAAwBkG,AmBoBA,CAAC7F,MnBpBzB,EAAiC,AmBoBb,GAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,CAAiC;ANtC/C,AbmBJ,AiBUC,SAAK,CjBVAQ,KAAK,GAAG,EiBUb,CAAuC,GjBVpB,KAAKqF,QiBUxB,IjBVmB,CAAkBD,OAAlB,CAApB;AQIF,AKtBM,AXxJa,AYiUT,AdtJRpF,AYhJG,EJmJL,EKtBM,AbmBJA,EYhJS,GEsSM,AdtJV,CAACM,AYhJO,CC6HF,CAAC,CD7HI,CAAC,GJmJJ,CAAC,CRHd,EQGa,AInJG,CZgJEF,CQGS,AInJqB,CC6H5C,CAAqB,CbmBH,AYhJ6B,CZgJ5BC,GcsJf,AdtJU,CcuJhB,CdvJF,AYhJgB,GEsSR,EACa,AFtSrB,EC4HI,CCyKI,CDzKiC,AD5HrC,CEsSqC,MD1KO,CAAC,ACyKzC,EAC6D,QD1KjE,YD5HJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AJoJH,AKtBI,AC0KJ,AdvJAL,AiBSC,ALvJL,IJiJI,ARHAA,GQGG,CAAC,CRHC,AiBWF,CJ9BO,AbmBJG,CcuJC,IdvJP,CQGA,CAAa,AKtBI,CbmBH,CAAd,AiBSC,CJ5BmB,ELsBF,ASQF,CESG,CNvCK,AMuCJ,GNvCA,AI8BC,EJ9BjB,AMuCqB+F,EXjBZ,GAAiB,EWiBG,OFTjB,EAFf,CAHiB,CAMlB,gBTTA;AKrBI,AC0KF,AdvJF,AiBYA,IJ/BI,KbmBCvB,EanBM,CAAC,GAAR,CAAY,CbmBhB,CAAc,EmBoBEL,CAAC,GnBpBG,CmBoBC,InBpBIO,CanBrB,AMuCsBM,OnBpBN,EAApB,EmBoBqB,CAAiBnF,KAAjB,EAAwB;AXjB7C,AKrBI,AC0KF,AdvJH,AmBmBgDkF,AFP/C,MH2IE,AKpI6CA,GXjB1C,AMqJA,EKpI+C,CLoI/C,CKpIiDZ,CAAC,CAACjC,CXjBxD,GAAe,EWiBuC,CXjBpC,AWiB6C8E,CXjB5C,OAAnB,mBKrB4B,QAAxB,EAAkC,OAAlC;ALsBJ,AKrBG,AXJP,AY8KQ,AKrIyC,IXhB7C,CWgBqB,CjBzCnB,AiByCsE,CXhBrE,CAAC,MNzBM,CMyBV,AMqJY,EZ9KC,CMyBC,ANzBA,EY8KgC,CZ9KjC,EMyBM,ANzBQ,AY8Kf,CAAR,KZ9KS,GMyBb,ENzBsD;AM0BvD,AKrBE,AXJH,AY8KK,AdvJL,AiBWE,CJpGJ,MC4OW,CZ1KH,AekCA,KflCK,CekCC,CjBXCvB,AiBWA,CflCC,GAAG,CAAC,AiByCA5F,InBlBlB,CAAuBoF,AmBkBA,AFPjB,CflCQ,AiByCUF,GjBzCG,AekCA,EEOG,CnBlB9B,EAAgC,AiBWA,CflCC,CAAC,MAAlC,EekC2B,YAA2B,MAAM,CAAC,UAA3D,EAAuE;AJxB3E,AXTE,AFuBE,AiBWE,SflCG,CFuBClF,CiBWC,GflCG,CFuBC,GEvBG,AFuBA,CEvBT,GekCH,CflCiB,CFuBC,EEvBE,CAAC,EFuBEqF,GEvBN,CAAU,KAAV,GFuBC,CAAkBD,EEvBE,KFuBpB,CEvBtB,AFuBE;AQGF,ANzBD,AY6KK,AdtJFpF,AiBWC,CfrCL,CM4BE,ERFEA,EcsJE,GAAG,AdtJA,CQEC,AMoJuB,AdtJvBO,CQEC,IMoJF,CNpJC,CMoJqC,CNpJtB,ARFrB,GAAiBH,IAAI,CAACC,GAAL,KAAaL,KAAK,CAACM,SAApC;AQGA,AMoJI,AdtJJN,AiBWD,IjBXCA,KQEK,ARFA,CAACG,IcsJI,CdtJV,GAAc,CAAd,GcsJkB,CNpJlB,EMqJS,CNrJa,IMqJ2B,CNrJjD,GMqJS,CADL;ANnJL,ANAI,AYqJE,AdvJL,AiBYF,AL9JK,MVoJM,AUpJA,GZkJJwE,AYlJO,GAAG,CEyS8B,AFzS7B,GEySX,CdvJL,CAAc,EcuJgD,AFzS/C,EAAgC,EZkJ3B,CcuJf,AFzS6C,CVoJrB,GAAI,AFFRE,EYlJV,EVoJiB,GUnJhC,CVmJwD,AFFpC,CmBkBcP,CnBlBlC,AmBkBmC,CPnK/B,CVmJwD,CAAC,CiBgBtB,IjBhBiB,CiBgBZuB,IjBhB2B,CAAC,CAArE,EAEP,EiBc2C,CAAgB7F,KAAhB,CAAuB,QPnK9D,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;AVuJP,AYmJS,AdvJN,acwJU,qBADJ,CAC0B,IAD1B,EACgC,QADhC,EAC0C,OAD1C;ANpJP,AMsJK,ENtJL,KM2IS,CN3IH,GAAA;AACJ,ARFF,QQEM,KAAK,ERFE6F,OQEP,CAAe,ERFrB,CAAwBT,OQElB,ARFN,EAAiC,GQEG,AWgBAd,CAAC,GXhBnC,CWgBuC,CXhBC,IWgBIoC,cAAL,CAAoB1G,KAApB,CAA2B;AXfhE,AMqJA,AdvJF,McuJE,IdvJIA,EmBkBEA,GnBlBG,EmBkBE,CLqIC,AdvJA,AmBkBAG,ELqIE,GKrIR,CLyHD,Ad3Ia,ImBkBI,CnBlBCkF,AmBkBjB,GACA,SnBnBY,CAAkBD,OAAlB,CAApB,GmBmBa,4RADL,GAEA,qBAAK,oOAAoO;AXjBhP,AMqJC,AdvJFpF,IAAAA,EcuJE,GdvJG,CAACO,McuJM,EAAE,AdvJd,GAAiB,CAAjB;AECG,AYyII,AdzIPP,IAAAA,CcyIA,CZzIS,GFAJ,CAACM,QEAe,CFArB,EEAwB,CFANF,IAAI,CEAQ,AFAPC,GAAL,EAAlB,GEAsC,CAAC,aAAT,CAAuB,EAAvB,CAA3B;AMEH,ANAJ,AYsJG,AdvJC,KmBjCA,InBiCKsE,EQCE,MRDP,CAAc,MAAM,KAAKE,QAAL,EQCD,ARDnB,KQCwB,cAAjB,CAAP,EAAyC;AACvC,AMuJJ,AdxJC,AmBoBA,YXnBS,SAAS,GAAG,KAAK,cAAvB;AACA,ASSM,EAAA,STTD,OSSiB,GAAA,ITTtB,GAAsB,cAAtB;AACA,ARDJ,AmB/N8B,AFyO5B,MTTE,KSSK,ITTI,ARDAQ,CQCC,ASSA,ITTD,CAAT,MRDJ,CAA0BpE,AiBUjB,CAAkB,CjBV3B,EAA8B;AQE3B,ARDD,AiBS0B,MAAA,IjBTpBd,AiBSwB,EAAE,GjBTrB,GAAG,MAAM,KAAK0E,QAAL,EAApB;AACA,AmBmBJuC,AFX6B,KAAlB,CAAP,KjBROjH,GmBmBG,CAACkH,CnBnBC,CAACnE,ImBmBjB,CAAsB,CnBnBX,CAAanC,IAAb,CAAkBf,ImBmB7B,CnBnBkC,CmBmBCiG,GnBnBG,EmBmBtC;AXlBI,ARAE,AiBQH,UTRO,GRAGjG,EQAE,GAAG,ARAA,CAACiB,EAAN,EQAU,ERAEA,EAAnB,UQAF;ARCC,AiBSH,KjBXS,CAAP;AQEA,ARCD,QQDK,KAAK,KAAK,cAAd,EAAwB;AOoDtB,APnDA,SOmDU,UAAV,CAAqB,QAArB,EAAqC;AACzC,APnDG,ARjEsB,SeoHlB,CAAC,iBAAD,EACC;AACA,EAAA,IAFD,KAE4B;AACjC,APrDA,QAAI,EOqDE,SPrDS,COqDC,APrDA,GOqDG,EPrDJ,CAAf,EAAwB;AOsDtB,APrDA,UAAI,EOqDE,GAAN,APrDS,GOqDA,EPrDK,KAAK,KAAnB,EAA0B;AOsDxB,APrDA,aAAK,COqDC,KAAK,MPrDX,CAAkB,KAAlB,EOqDA;AACA,APrDD,AMwJK,SAAO,MCnGJ,KAAK,ODmGR,CAA0B,ECnGvB,CAAgB,CDmGnB,EAA2C,UCnGxC,CAA8B,QAA9B,CAAP;AACD,APrDF,AMwJD,KN5JA,EOqDmB,IPjDZ,AMwJA,INxJI,CMwJC,INxJI,YAAY,AMwJrB,IAAyB,KAAK,gBAAL,CAAsB,GAAtB,CNxJzB,AMwJmD,ENxJd,EMwJZ,CAAzB,IACH,0BADJ;ANvJE,AMyJH,WNzJQ,sBAAL,CAA4B,KAA5B;AOqDA,APpDD,AM0JH,AGjJU,EAAA,GTXD,COsDL,KPpDK,ESSY,ETTR,COoDC,AE3CO,EF2CL,EPpDE,EO+CG,UP/CS,IAArB,EAA2B;AOqDhC,APpDA,ASSF,MF2CE,IE3CI,CTTC,KSSK,EF2CE,CE3CE,CF2CA,GPpDd,CAAkB,ASSC,KTTnB,MSSc,CAAuC,OAAvD;AFqCmB,AP7ClB,KO6CD,AP/CO,MAEA,IAAI,UAAU,CAAC,KAAD,CAAd,EAAuB;AOqD9B,APpDE,ASQF,QAAI,GF4CI,APpDD,GSQG,CF4CE,AE5CD,KF4CM,CE5Cb,KAAkB,CTRpB,ASQF,CTRwB,COoDjB,AE5CkB,GF6CrB,CPrDF,UOqDa,CAAC,UAAD,EAAa,iBAAb,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,APtDE,ASQC,GFgCJ,EP1CS,MAEA,IAAI,KAAK,KAAK,aAAd,EAAuB;AOuDjC,APtDK,ASQD,KAJkB,CAKnB,KTTO,KAAL,GAAa,aAAb;AOwDN,APvDM,ASSF,WTTO,KAAL;AACD,AMwJO,AG/IR,KTZO,IM2JQ,ENxJR,MMwJC,GAAe;ANvJrB,AMwJF,AG/IA;ATRE,AMwJF,AG/IA,UH+IM,CNxJC,QMwJQ,GAAG,CNxJhB,CAAkB,IMwJI,CNxJtB,AMwJuB,cAAP,CAAsB,IAAtB,CAAlB;ANvJC;AACF,ANAI,AYuJH,MZvJS,EYuJL,CAAC,SAAS,CAAC,SZvJgB,GAC/B,EYsJK,CAAyB,SAAzB,CAAL,EAA0C;AZrJ1C,AYsJE,AGhJF,MHgJE,EGhJE,MAAM,CHgJC,AGhJA,CHgJC,OGhJR,CHgJF,IGhJsB,SAApB,IAAiC,CAAC,MAAM,CAAC,QAAP,CAAgB,YAAtD,EAAoE,oEfRjE;AMEG,AMuJL,AGhJC,ETPI,ISOJ,ITPY,CAAC,CSOP,CAAC,ETPK,EAAW,ISOvB,CAAgB,WAAhB,CAA6B,qBAA7B,CACI,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,OAApB,CADJ,EACkC,KAAK,SADvC;ATNF,ASQC,KAHD,ITLK,ESQE,IAAI,CTRX,CAAa,UAAb,CAAyB,YAAzB,CAAsC,IAAtC,EAA4C,GSQrC,ETR0C,ASQT,OTRxC;AACD,AMsJC,AG9IG,SH8IE,EG9IG,OH8IR,GG9IG,CH8Ie,AG9IgB,IH8IlC,cG9IG,GACG,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,YAAY,aAAb,GAA6B,CAA7B,GAAiC,CAAC,CAAC,UAArD,CADH;AAEF,KAHM,MAGA;ATRD,AMqJN,AG5IE,ETTI,OMqJD,KNrJa,CAAC,KAAD,EAAY,SMqJ9B,GAPuB,CAQvB;ANrJA,ASSE,QTTE,KAAK,KAAL,KAAe,KAAnB,EAA0B;AACxB,ASSA,WAAK,4BAAL,GAAoC,IAApC;ATRD,AMoJD,AG3IC,SH2II,uBAAL,GAA+B,IAAI,GAAJ,EAA/B,CATuB,CAUvB;AACA,AG5ID;ATTC,AMsJA,SNtJK,KAAL;AMuJA,AG5IF,EAAA,iBAAiB,GAAA;ATVf,ASWA,STXK,CSWC,OTXN,CAAc,KAAd,ISWA,GADe,CAEf;AH2IA,AG1IA,QH0II,KAAK,cAAL,CAAoB,yBAAyB,CAAC,YAAD,EAAe,IAAf,CAA7C,CAAJ,EAAwE;ANtJxE,AMuJE,SNvJG,GMuJG,ENvJR,GAAa,AMuJA,GAAG,ENvJhB,GMuJqB,UAAnB,CADsE,CAEtE;ANvJH,ASYC,QAAI,KAAK,UAAL,IAAmB,MAAM,CAAC,QAAP,KAAoB,SAA3C,EAAsD;AH4IpD,AG3IA,MAAA,MH2IM,AG3IA,CAAC,OH2IO,CG3Id,CAAgB,CH2IC,CACf,GAAG,MAAM,CAAC,AG5IZ,CAA6B,IAA7B,cH4IK,CAA2B,KAA3B,CADY,EAEf,IAAI,OAAO,MAAM,CAAC,qBAAd,KAAwC,UAAzC,GACC,MAAM,CAAC,qBAAP,CAA6B,KAA7B,CADD,GAEC,EAFJ,CAFe,CAAjB,CAHsE,CAStE;AN5JI,ASYL,ETZK,YAAY,CAAC,KAAD,EAAe;AACjC,AKXG,ACuKD,AGhJH,MJvBU,ILWH,CM4JC,CDvKQ,ELWL,CKVV,CAAC,CLUY,AM4JA,CAAX,IN5JgB,AKVlB,ACsKkB,EDrKjB,MCqKC,CN5JW,CAAe,AM4JA,CDtK5B,EAEC,OAFD,CLUA,IKRgC;ALShC,AKRE,ACoKE,AG/IN,ITbE,EKRM,CAAC,ELQF,GAAG,EKRF,GLQO,CKRK,GLQD,IAAT,AKRiB,GLQD,EAAhB,EKRU,CLQW,IKRQ,CLQrC,CAFiC,CAGjC,KKTM,IAA2C,CAAC,OAAO,CAAC,SAAxD,EAAmE;ALUrE,AKTI,ACoKA,UDpKM,IAAI,KAAJ,CAAU,qCAAV,CAAN;AEiEF,AFhEC,ACoKC,SCpGQ,QAAV,CAAmB,QAAnB,EAAmC;AACvC,APxDE,AM4JI,SCpGC,CAAC,APxDA,GM4JG,UN5JU,GACf,COuDC,ADoGD,CAAoB,CCnGlB,ADmGF,EAAwB,EN3JjB,GM2J8B,CAAC,CN3JtC,AM2JqC,CAArC,IN3JiB,QAAjB,GAA4B,KAA5B,GAAoC,MAAM,CAAC,KAAD,CAD9C;AO0DM,AFlEJ,ACqKC,ECnGG,IAFD,EFhEG,GEkEyB,MFlEhB,GAAG,OAAO,CAAC,SAA1B;AEmEF,APzDA,AM4JC,QN5JG,EOyDE,EPzDE,KAAK,GOyDG,EPzDE,COyDC,MPzDN,CAAa,eAAtB,IACA,IAAI,CAAC,QAAL,KAAkB;AOyDpB,APzDsB,AKVtB,ACsKH,MCnGG,EFnEM,CEmEH,GAAA,OFnEc,GAAG,cAAM,GAAN,CAAU,SAAV,CAApB;AEoEE,AP3DJ,AM+JF,MN9JgD,SO0DnC,KAAK,UAAL,CAAgB,gBAAhB,CAAiC,QAAjC,CAAP;AACD,AP1DD,AKVA,AIsBM,EAAA,KF2CW,CFjEX,AIsBM,CAAC,WJtBK,GAAG,GIsBT,EAAkC,oBJtBA,IAC1C,SAAS,CAAC,QAAV,KAAuB;ALU3B,AKV8B,AIsBhC;AF8CE,APzDA,AKZqB,AIwBvB,KJtBM,CEmEJ,AFnEK,CAAE,SEmEG,AFnEqB,CAAC,CEmEpB,GFrEZ,CEiEiB,AFvEa,CAS9B;AEmEA,APzDC,ASYH,MF6CE,EPzDC,IAAa,CAAC,IAAd,COyDW,EAAE,APzDQ,aAArB;AOoDgB,APnDlB,AKVC,AIsBF,KFuCA,EPzDA,CKJQ,EIsBF,GTZC,WKViB,AIsBJ,GJtBO,AIsBJ,KAAK,MAAL,CJtBgB,CIsBvC,GJtB2C,CAAC,cAAc,CAAC,GAAf,CAAmB,SAAnB,CAA1C,CAV8B,CAW9B;AEmEF,APzDE,AKTA,ACqKI,AGhJN,SHgJa,CGhJP,CF6CE,APzDD,IOyDK,CE7CZ,CAAa,GF6CI,GPzDf,CAAkB,KOyDb,GACH,AP1DwB,CAAC,CM4JvB,AGhJN,CHiJE,CGtJ8C,CAMhD,EH+IM,EACe,ECnGN,CAAC,GP1DI,CAAwB,AM4JtC,EAC2C,ICnGlC,EAAa,KP1DR,CAAlB,WO0Da,EAA0C,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,AP3DE,AM6JD,GC/GF,OD+GQ,SAAS,GAAG,OAAO,CAAC,SAA1B;ACjGH,AFrEK,ACuKF,AGjJA,QJtBQ,AIsBJ,GHiJG,SAAS,EGjJE,CJtBK,ECuKF,CDtKf,CIqBiB,GHiJhB,GACH,SDvKkB,ACsKf,GDtKkB,ACwKpB,EGnJL,EAA6C,GHmJjC,CDxKqB,CAAC,OCwK7B,KAAqB,QAArB,EDxKoB,CCyKhB,CDzKa,GAAuC,KCwKxD,GAEK,CD3KR,MC2Ke,IAAP,KAAgB,QAAhB,GAA2B,IAAI,CAAC,WAAL,EAA3B,GAAgD,SAJ1D;AN7JA,AKRE,AC0KH,AGrJI,STbE,ESaG,GTbR,GAAa,KAAb,AKPM,AIoBH,CACI,KJtBL,CIqBC,CJnBG,AIqBI,cAFP,CJrBD,CIwBQ,CJrBJ,IIqBS,EJrBT,CAAA,MAAA,CAAA,AIkBH,EAIO;AF4Cd,AP5DG,AKNQ,ACyKT,AGnJa,IJtBJ,EEkEL,EE5CS,SF4CE,AE5CO,EJtBE,AIsBA,CF6CtB,CAAC,AFnEuB,GIsBG,OF6C3B,EAAiC,AE7CvB,KF6CV,EAAgD,CFnEJ,CAAC,EEmE7C,KAAqE,EFnEzB;AEoE1C,AFpEI,AIsBgC,EF8CpC,CFpEI,EAAsD,GEoEpD,AE9C8B,CF8C7B,GFpEH,CAHJ,EAf8B,CAoB9B,IIoBgD,EAAE,CF8ClD,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC,UAAnC;AACD,AP7DK,AKLJ,AImBQ,CF4Cd,CP1DU,KSUH,iBTVyB,CAAC,KAAD,EAAsB;AAClD,AKLE,AImBD,KAb+C,CAchD,ITfM,QAAQ,GAAG,KAAK,OAAL,CAAa,eAAb,CAA6B,KAA7B,CAAjB;AO8DJ,AFlEM,AIoBF,MF8CE,aAAa,GAAG,CAAC,UAAD,EAAiC,OAAjC,MACjB;AACC,AP/DF,AKJE,AIoBF,EF+CE,IAAI,EAAE,AP/DJ,KAAK,GO8DR,EP9DG,YAAsB,kCAAtB,IACA,KAAK,KAAL,CAAW,QAAX,KAAwB,QAD5B,EACsC;AO+DpC,AP9DA,AKLA,EEmEA,SAAS,AP9DJ,EO8DM,GP9DX,CAAW,MAAX,CO4DD,AP5DmB,KAAK,CAAC,MAAxB;AO+DA,AP9DD,AKLC,EEmEA,GAAG,APjEL,EOiEO,IP9DA,GO8DO,CAAC,GAHd;AAIC,AP9DA,AKLA,ACsKI,AGpJN,EFiDE,MEjDE,CHoJS,IGpJJ,YHoJH,CACJ,KADI,EACY,GADZ,EAC0B,GGrJhC,EAAuC,KHqJP,GAAyB,QADnD,EAC2D;ACxGhE,APzDC,AKLA,ACuKF,AGrJE,CF2CgB,CAAtB,SD0GW,AGrJA,UHqJU,CAAC,KAAD,EAAQ,GAAR,CAAjB,MGrJE,GAAoC,KAApC;ATZA,AMkKH;ACnGH,AP9DM,AKNA,ACyKJ,AGvJK,MFkDD,AFpEI,KIkBE,WJlBN,AIkBC,CAAuC,CJlBlB,EEoEF,GACtB,CAAC,AEnDE,CAAgD,MFmDnD,CEnDG,CFmDgC,AEnDyB,CAAD,IAAM,EFmDjE,KAA4D;AAC1D,AP/DA,AKNE,AIkBA,SFmDF,CFrEQ,ELMF,EKNM,AIkBJ,CFmDR,CAAA,CFrEe,EIkBF,CTZC,EO+Dd,AEnDgB,CFmDhB,AP9DI,IAAI,EO8DR,CAAA,AEnDwB,CJlBH,AIkBI,GJlBV,CAAU,CEqEzB,CAAA,EAAA,EACK,GEpDW,CAAuB,GFmDvC,CAAA,CFrEe,CEsEH,AFtEV,CIkBc,CAAd,QTXE,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;AOiEE,AEpDA,IFoDA,IEpDA,IFoDQ,CAAC,AEpDJ,CAAC,IFoDE,EAA8B,KEpDtC,GAAoB,CAAC,CAAC,OAAtB;AFqDE,APhEJ,AKPE,AImBA,MFoDE,MAAM,APhEJ,COgEK,AEpDJ,KJnBC,CEuEJ,CACI,APjEM,GAAG,ASYf,CJnBA,AImBgB,CFqDL,AFxEE,CEwED,KPjEW,CAAC,GOiElB,AErDN,CFqDsB,AErDM,ETZb,EAAjB,AKPE,CImBA,CJrBoB,CE0ES,AFvE7B,CEuE8B,GAAxB,CADJ,EAC2D,OAD3D;AAED,AFvED,AIkBD,OAJA;ATRD,AKLE,AIkBH,MTbC,QAAQ,CAAC,MAAT,CAAgB,KAAK,CAAC,MAAtB;AO6DY,AFjEV,AIkBL,GF8CG,CAAA;AAOD,APlEC,AKJE,AImBN,CF0CF,UPzDW,YAAL,CAAkB,QAAlB;AMoKI,SAAO,2BAAP,CACJ,KADI,EACgB,OADhB,EAC4C;ACjGtD,APnEM,AMqKF,MClGE,IDkGI,CNrKC,GMqKG,ENrKR,CMqKW,ENrKE,KOmEK,ADkGA,CAAC,ECjGrB,APpEE,EMqKF;AChGA,APpEC,AKLG,AC0KJ,CCjGC,OAAD,EAAmC,AFzEzB,AC0KJ,KCjGN,EAA+C,CFzE7B,CC0KH,ECjGf,AFzEqB,CC0KH,GD1KO,CEyE2C,AFzE1C,GC0KD,CAAC,CD1KL,QC0KH,ID1KyB,AC0KJ,gBAAvC,kBD1KqB,GACb,IAAI,CAAC,KAAL,CAAW,QADE,GAEb,SAFJ;AE0EF,APpEH,AKHK,ACwKJ,ECjGE,EFvEE,IEuEI,CAAC,CDiGH,KCjGJ,CAAc,KAAK,CAAC,CDiGH,EDxKM,CEuEJ,AFtEb,ACwKH,CClGH,EAA2B,IDkGjB,EDzKa,CEuEvB,CFtEiB,KCwKd,KAAqB,KDzKD,EAC+B,GCwKnD,GAAkC,EDzKd,CAArB,MCyKC,GAA8C,SAAS,CAAC,aAD7D;AChGC,AFtEG,ACwKJ,CCtGJ,UDsGW,aAAa,EDxKJ,CCwKO,QDxKnB,EAAuB,GCwKS,CAAC,KDxKD,ACwKA,CDxKC,CCwKO,IAAR,CAAhB,GAAgC,CDxKhD,ICwKJ;AChGJ,APrEU,AKFF,ACwKL,ENtKO,EKFF,SAAS,CAAC,ILEQ,CAAC,KAAD,CKFlB,C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","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["export function timeToString(ms) {\r\n    const secs = Math.floor(ms / 1000) % 60;\r\n    const min = Math.floor(ms / 60 / 1000) % 60;\r\n    const h = Math.floor(ms / 60 / 60 / 1000);\r\n\r\n    return `${h.toString().padStart(2, '0')}:${min.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n}\r\n\r\nexport function uuidv4() {\r\n\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n\t\tvar r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n\t\treturn v.toString(16);\r\n\t});\r\n}\r\n\r\nexport function getTimerTime(timer) {\r\n    let time = timer.length;\r\n\r\n    if(timer.state === 1) {\r\n      time = timer.length - ((Date.now() - timer.timestamp) + timer.duration);\r\n    }\r\n    if(timer.state === 0 && timer.duration > 0) {\r\n      time = timer.length - timer.duration;\r\n    }\r\n    time = Math.max(time, 0);\r\n\r\n    return time;\r\n}\r\n\r\nexport function getArrayDiff(oldArray, newArray) {\r\n  const deletedTimers = [];\r\n  const addedTimers = [];\r\n\r\n  for (let timer of oldArray) {\r\n    const lokalTimer = newArray.find(t => t.id === timer.id);\r\n    if (!lokalTimer) {\r\n      addedTimers.push(timer);\r\n    }\r\n  }\r\n  for (let timer of newArray) {\r\n    const stateTimer = oldArray.find(t => t.id === timer.id);\r\n    if (!stateTimer) {\r\n      deletedTimers.push(timer);\r\n    }\r\n  }\r\n\r\n  return [deletedTimers, addedTimers];\r\n}\r\n","import { getArrayDiff, uuidv4 } from \"./utils.js\";\r\n\r\nclass DB {\r\n\r\n  onready() { }\r\n\r\n  constructor(stateObject) {\r\n    this.state = stateObject;\r\n    this.dbName = \"Timers\";\r\n    this.storeName = \"timers\";\r\n    this.version = 1;\r\n    this.db = null;\r\n\r\n    this.initDatabase();\r\n  }\r\n\r\n  initDatabase() {\r\n    const request = window.indexedDB.open(this.dbName, this.version);\r\n\r\n    request.onerror = event => {\r\n      console.error(\"Database error:\", event.target.error.name + ':', event.target.error.message);\r\n    };\r\n    request.onupgradeneeded = event => {\r\n      const db = event.target.result;\r\n      const objectStore = db.createObjectStore(this.storeName, { keyPath: \"id\" });\r\n\r\n      // {\r\n      //     id: <uinque id>,\r\n      //     length: 1000 * 60, // ms\r\n      //     title: \"Timer\",\r\n      //     timestamp: 0,\r\n      //     state: 0,\r\n      //     duration: 0,\r\n      // }\r\n\r\n      objectStore.createIndex(\"id\", \"id\", { unique: true });\r\n      objectStore.createIndex(\"length\", \"length\", { unique: false });\r\n      objectStore.createIndex(\"title\", \"title\", { unique: false });\r\n      objectStore.createIndex(\"timestamp\", \"timestamp\", { unique: false });\r\n      objectStore.createIndex(\"state\", \"state\", { unique: false });\r\n      objectStore.createIndex(\"duration\", \"duration\", { unique: false });\r\n\r\n      objectStore.transaction.oncomplete = event => {\r\n        const bjectStore = db.transaction(this.storeName, \"readwrite\").objectStore(this.storeName);\r\n\r\n        this.state.timers.forEach(timer => {\r\n          bjectStore.add(timer);\r\n        });\r\n      };\r\n    };\r\n    request.onsuccess = event => {\r\n      this.db = event.target.result;\r\n\r\n      db.onerror = event => {\r\n        console.error(\"Database error: \" + event.target.errorCode);\r\n      };\r\n\r\n      this.onready();\r\n    };\r\n  }\r\n\r\n  startTransation(callback = () => { }) {\r\n    const transaction = this.db.transaction([this.storeName], \"readwrite\");\r\n\r\n    transaction.oncomplete = event => {\r\n      callback();\r\n    };\r\n\r\n    transaction.onerror = event => {\r\n      callback(event);\r\n    };\r\n\r\n    return transaction;\r\n  }\r\n\r\n  async getTimers() {\r\n    return new Promise((resolve, reject) => {\r\n      const transaction = this.startTransation();\r\n      const objectStore = transaction.objectStore(this.storeName);\r\n      const request = objectStore.getAll();\r\n      request.onerror = event => {\r\n        reject(event);\r\n      };\r\n      request.onsuccess = event => {\r\n        resolve(request.result);\r\n      };\r\n    })\r\n  }\r\n\r\n  async deleteTimer(id, callback) {\r\n    return new Promise((resolve, reject) => {\r\n      const request = this.startTransation().objectStore(this.storeName).delete(id);\r\n      request.onsuccess = event => {\r\n        resolve();\r\n      };\r\n      request.onerror = event => {\r\n        reject(event);\r\n      };\r\n    })\r\n  }\r\n\r\n  addTimer(timer) {\r\n    const transaction = this.startTransation();\r\n    const objectStore = transaction.objectStore(this.storeName);\r\n\r\n    objectStore.add(timer);\r\n  }\r\n\r\n  async saveTimers() {\r\n    return new Promise(async (resolve, reject) => {\r\n      const transaction = this.startTransation();\r\n      const objectStore = transaction.objectStore(this.storeName);\r\n\r\n      for(let timer of this.state.timers) {\r\n        const requestUpdate = objectStore.put(timer);\r\n        requestUpdate.onerror = event => {\r\n          console.error(event.target.error);\r\n        };\r\n        requestUpdate.onsuccess = event => {};\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst stateObject = {\r\n  currentTimer: null,\r\n  timers: []\r\n};\r\n\r\nconst db = new DB(stateObject);\r\ndb.onready = () => {\r\n  window.addEventListener('statechange', e => {\r\n    db.getTimers().then(dbTimers => {\r\n      const diff = getArrayDiff(stateObject.timers, dbTimers);\r\n      const deletedTimers = diff[0];\r\n      const addedTimers = diff[1];\r\n\r\n      for (let timer of deletedTimers) {\r\n        db.deleteTimer(timer.id);\r\n      }\r\n      for (let timer of addedTimers) {\r\n        db.addTimer(timer);\r\n      }\r\n    })\r\n  });\r\n  window.addEventListener('tick', e => {\r\n    db.saveTimers();\r\n  });\r\n  db.getTimers().then(timers => {\r\n    stateObject.timers = timers;\r\n    State.setState(stateObject);\r\n  })\r\n}\r\n\r\nsetInterval(async () => {\r\n  const state = await State.getState();\r\n\r\n  for (let timer of state.timers) {\r\n    const time = timer.length - ((Date.now() - timer.timestamp) + timer.duration);\r\n\r\n    if (time <= 0) {\r\n      timer.state = 0;\r\n      // alert notification\r\n    }\r\n  }\r\n\r\n  window.dispatchEvent(new Event('tick'));\r\n}, 1000);\r\n\r\nexport default class State {\r\n\r\n  static setState(state) {\r\n    window.dispatchEvent(new Event('statechange'));\r\n  }\r\n\r\n  static async getState() {\r\n    return stateObject;\r\n  }\r\n\r\n  static async createTimer(options = {\r\n    length: 1000 * 60, // ms\r\n    title: \"Timer\",\r\n    timestamp: 0,\r\n    state: 0,\r\n    duration: 0,\r\n  }) {\r\n    const state = await this.getState();\r\n    options.id = uuidv4();\r\n    state.timers.push(options);\r\n    this.setState(state);\r\n  }\r\n\r\n  static async updateTimer(timerId, options) {\r\n    const state = await this.getState();\r\n    const timer = await this.getTimerById(timerId);\r\n    const index = state.timers.indexOf(timer);\r\n    state.timers[index] = Object.assign(timer, options);\r\n    this.setState(state);\r\n  }\r\n\r\n  static async deleteTimer(timerId) {\r\n    const timer = await this.getTimerById(timerId);\r\n    const state = await this.getState();\r\n    state.timers.splice(state.timers.indexOf(timer), 1);\r\n    this.setState(state);\r\n  }\r\n\r\n  static async startTimer(timerId) {\r\n    const timer = await this.getTimerById(timerId);\r\n    timer.timestamp = Date.now();\r\n    timer.state = 1;\r\n    this.setState(await this.getState());\r\n  }\r\n\r\n  static async stopTimer(timerId) {\r\n    const timer = await this.getTimerById(timerId);\r\n    timer.duration = Date.now() - timer.timestamp;\r\n    timer.state = 0;\r\n    this.setState(await this.getState());\r\n  }\r\n\r\n  static async resetTimer(timerId) {\r\n    const timer = await this.getTimerById(timerId);\r\n    timer.duration = 0;\r\n    timer.timestamp = Date.now();\r\n    this.setState(await this.getState());\r\n  }\r\n\r\n  static async getTimerById(id) {\r\n    const state = await this.getState();\r\n    return state.timers.find(timer => {\r\n      return timer.id == id;\r\n    });\r\n  }\r\n\r\n}\r\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node'; index: number;\n}|{\n  readonly type: 'attribute';\n  index: number;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: readonly unknown[]) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari does not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\ndeclare const trustedTypes: typeof window.trustedTypes;\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes!.createPolicy('lit-html', {createHTML: (s) => s});\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: readonly unknown[];\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: readonly unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment position.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    let value = this.getHTML();\n    if (policy !== undefined) {\n      // this is secure because `this.strings` is a TemplateStringsArray.\n      // TODO: validate this when\n      // https://github.com/tc39/proposal-array-is-template-object is\n      // implemented.\n      value = policy.createHTML(value) as unknown as string;\n    }\n    template.innerHTML = value;\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    const parts = this.parts;\n\n    // If we're assigning an attribute via syntax like:\n    //    attr=\"${foo}\"  or  attr=${foo}\n    // but not\n    //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n    // then we don't want to coerce the attribute value into one long\n    // string. Instead we want to just return the value itself directly,\n    // so that sanitizeDOMValue can get the actual value rather than\n    // String(value)\n    // The exception is if v is an array, in which case we do want to smash\n    // it together into a string without calling String() on the array.\n    //\n    // This also allows trusted values (when using TrustedTypes) being\n    // assigned to DOM sinks without being stringified in the process.\n    if (l === 1 && strings[0] === '' && strings[1] === '') {\n      const v = parts[0].value;\n      if (typeof v === 'symbol') {\n        return String(v);\n      }\n      if (typeof v === 'string' || !isIterable(v)) {\n        return v;\n      }\n    }\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    if (this.startNode.parentNode === null) {\n      return;\n    }\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: readonly string[];\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: readonly string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n  try {\n    const options = {\n      get capture() {\n        eventOptionsSupported = true;\n        return false;\n      }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.addEventListener('test', options as any, options);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    window.removeEventListener('test', options as any, options);\n  } catch (_e) {\n    // event options not supported\n  }\n})();\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behavior, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport interface TemplateCache {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>;\n  readonly keyString: Map<string, Template>;\n}\n\nexport const templateCaches = new Map<string, TemplateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|\n    ((value: string|null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// tslint:disable-next-line:no-any\nexport type PropertyValues<T = any> =\n    keyof T extends PropertyKey ? Map<keyof T, unknown>: never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    const descriptor = this.getPropertyDescriptor(name, key, options);\n    if (descriptor !== undefined) {\n      Object.defineProperty(this.prototype, name, descriptor);\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   */\n  protected static getPropertyDescriptor(\n      name: PropertyKey, key: string|symbol, options: PropertyDeclaration) {\n    return {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)\n            .requestUpdateInternal(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this._classProperties && this._classProperties.get(name) ||\n        defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState!: UpdateState;\n  private _instanceProperties?: PropertyValues;\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private _updatePromise!: Promise<unknown>;\n  private _enableUpdatingResolver: (() => void)|undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._updateState = 0;\n    this._updatePromise =\n        new Promise((res) => this._enableUpdatingResolver = res);\n    this._changedProperties = new Map();\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdateInternal();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection.\n    this.enableUpdating();\n  }\n\n  protected enableUpdating() {\n    if (this._enableUpdatingResolver !== undefined) {\n      this._enableUpdatingResolver();\n      this._enableUpdatingResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    // tslint:disable-next-line:no-unnecessary-type-assertion\n    const propName = (ctor._attributeToPropertyMap as AttributeMap).get(name);\n    if (propName !== undefined) {\n      const options = ctor.getPropertyOptions(propName);\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This protected version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  protected requestUpdateInternal(\n      name?: PropertyKey, oldValue?: unknown, options?: PropertyDeclaration) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      options = options || ctor.getPropertyOptions(name);\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._updatePromise = this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this.requestUpdateInternal(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this._updatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this._hasRequestedUpdate;\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this._hasRequestedUpdate) {\n      return;\n    }\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      } else {\n        this._markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n      throw e;\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n    this._markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The name of the custom element to define.\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n * supplied to configure property features.\n *\n * This decorator should only be used for public fields. Private or protected\n * fields should use the [[`internalProperty`]] decorator.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected property that still triggers updates to the\n * element when it changes.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function internalProperty(options?: InternalPropertyDeclaration) {\n  return property({attribute: false, hasChanged: options?.hasChanged});\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n * once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    if (cache) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      descriptor.get = function(this: LitElement) {\n        if ((this as unknown as\n             {[key: string]: Element | null})[key as string] === undefined) {\n          ((this as unknown as {[key: string]: Element | null})[key as string] =\n               this.renderRoot.querySelector(selector));\n        }\n        return (\n            this as unknown as {[key: string]: Element | null})[key as string];\n      };\n    }\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      async get(this: LitElement) {\n        await this.updateComplete;\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * @example\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  // Return value typed as any to prevent TypeScript from complaining that\n  // standard decorator function signature does not match TypeScript decorator\n  // signature\n  // TODO(kschaaf): unclear why it was only failing on this decorator and not\n  // the others\n  return ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n              (name !== undefined) ?\n              legacyEventOptions(options, protoOrDescriptor as Object, name) :\n              standardEventOptions(\n                  options, protoOrDescriptor as ClassElement)) as\n             // tslint:disable-next-line:no-any decorator\n             any;\n}\n\n// x-browser support for matches\n// tslint:disable-next-line:no-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n    ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n * meaning any assigned nodes that are slot elements are replaced with their\n * assigned nodes.\n * @param selector A string which filters the results to elements that match\n * the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n    slotName = '', flatten = false, selector = '') {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        const slotSelector =\n            `slot${slotName ? `[name=${slotName}]` : ':not([name])'}`;\n        const slot = this.renderRoot.querySelector(slotSelector);\n        let nodes = slot && (slot as HTMLSlotElement).assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n              (node) => node.nodeType === Node.ELEMENT_NODE &&\n                      (node as Element).matches ?\n                  (node as Element).matches(selector) :\n                  legacyMatches.call(node as Element, selector));\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `supportsAdoptingStyleSheets` is true then we assume\n      // CSSStyleSheet is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {render, ShadyRenderOptions} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult, unsafeCSS} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n\nexport type CSSResultOrNative = CSSResult|CSSStyleSheet;\n\nexport interface CSSResultArray extends\n    Array<CSSResultOrNative|CSSResultArray> {}\n\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n\n  /**\n   * Reference to the underlying library method used to render the element's\n   * DOM. By default, points to the `render` method from lit-html's shady-render\n   * module.\n   *\n   * **Most users will never need to touch this property.**\n   *\n   * This  property should not be confused with the `render` instance method,\n   * which should be overridden to define a template for the element.\n   *\n   * Advanced users creating a new base class based on LitElement can override\n   * this property to point to a custom render method with a signature that\n   * matches [shady-render's `render`\n   * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n   *\n   * @nocollapse\n   */\n  static render:\n      (result: unknown, container: Element|DocumentFragment,\n       options: ShadyRenderOptions) => void = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   */\n  static styles?: CSSResultOrNative|CSSResultArray;\n\n  private static _styles: Array<CSSResultOrNative|CSSResult>|undefined;\n\n  /**\n   * Return the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * @nocollapse\n   */\n  static getStyles(): CSSResultOrNative|CSSResultArray|undefined {\n    return this.styles;\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles() {\n    // Only gather styles once per class\n    if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n      return;\n    }\n    // Take care not to call `this.getStyles()` multiple times since this\n    // generates new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.getStyles();\n\n    if (Array.isArray(userStyles)) {\n      // De-duplicate styles preserving the _last_ instance in the set.\n      // This is a performance optimization to avoid duplicated styles that can\n      // occur especially when composing via subclassing.\n      // The last item is kept to try to preserve the cascade order with the\n      // assumption that it's most important that last added styles override\n      // previous styles.\n      const addStyles = (styles: CSSResultArray, set: Set<CSSResultOrNative>):\n          Set<CSSResultOrNative> => styles.reduceRight(\n              (set: Set<CSSResultOrNative>, s) =>\n                  // Note: On IE set.add() does not return the set\n              Array.isArray(s) ? addStyles(s, set) : (set.add(s), set),\n              set);\n      // Array.from does not work on Set in IE, otherwise return\n      // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n      const set = addStyles(userStyles, new Set<CSSResultOrNative>());\n      const styles: CSSResultOrNative[] = [];\n      set.forEach((v) => styles.unshift(v));\n      this._styles = styles;\n    } else {\n      this._styles = userStyles === undefined ? [] : [userStyles];\n    }\n\n    // Ensure that there are no invalid CSSStyleSheet instances here. They are\n    // invalid in two conditions.\n    // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n    //     this is impossible to check except via .replaceSync or use\n    // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n    //     false)\n    this._styles = this._styles.map((s) => {\n      if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n        // Flatten the cssText from the passed constructible stylesheet (or\n        // undetectable non-constructible stylesheet). The user might have\n        // expected to update their stylesheets over time, but the alternative\n        // is a crash.\n        const cssText = Array.prototype.slice.call(s.cssRules)\n                            .reduce((css, rule) => css + rule.cssText, '');\n        return unsafeCSS(cssText);\n      }\n      return s;\n    });\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls\n   * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n   * captures any pre-set values for registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this.constructor as typeof LitElement)._getUniqueStyles();\n    (this as {\n      renderRoot: Element|DocumentFragment;\n    }).renderRoot = this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the [[`styles`]]\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const templateResult = this.render();\n    super.update(changedProperties);\n    // If render is not implemented by the component, don't call lit-html render\n    if (templateResult !== renderNotImplemented) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `NodePart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   */\n  protected render(): unknown {\n    return renderNotImplemented;\n  }\n}\n","import { LitElement, html, css } from 'lit-element';\r\n\r\nexport default class BaseElement extends LitElement {\r\n\r\n  static get styles() {\r\n    return css`\r\n      button {\r\n        border-radius: var(--border-radius-lvl2);\r\n        min-width: 45px;\r\n        height: 45px;\r\n        padding: 0;\r\n        margin: 0;\r\n        border: none;\r\n        background: var(--forground);\r\n        outline: none;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        transition: box-shadow .05s ease-out;\r\n      }\r\n      button:active {\r\n        box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.1);\r\n      }\r\n      svg {\r\n        width: var(--global-icon-size);\r\n        height: var(--global-icon-size);\r\n        fill: var(--text-color);\r\n      }\r\n      :host {\r\n        display: block;\r\n      }\r\n    `;\r\n  }\r\n\r\n}\r\n","import { html, css } from 'lit-element';\r\nimport State from '../State.js';\r\nimport { getTimerTime, timeToString } from '../utils.js';\r\nimport BaseElement from './BaseElement.js';\r\n\r\nclass Timer extends BaseElement {\r\n\r\n  static get styles() {\r\n    return css`\r\n      ${super.styles}\r\n      input {\r\n        border: none;\r\n        height: auto;\r\n        width: 90px;\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: none;\r\n      }\r\n      :host {\r\n        padding: 15px;\r\n        padding-bottom: 80px;\r\n      }\r\n      .header {\r\n        display: grid;\r\n        grid-template-columns: auto 1fr auto;\r\n        justify-items: center;\r\n        align-items: center;\r\n      }\r\n      .controls {\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n      button.big {\r\n        border-radius: 100%;\r\n        background: var(--text-color);\r\n        color: var(--background);\r\n        width: 85px;\r\n        height: 85px;\r\n        margin: 0 10px;\r\n        transition: box-shadow .15s ease-out;\r\n      }\r\n      button.big:active {\r\n        box-shadow: 0px 1px 12px rgba(0, 0, 0, 0.5);\r\n      }\r\n      .timer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin: 40px 20px;\r\n      }\r\n      .timer .time {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 75px;\r\n        font-weight: 500;\r\n      }\r\n      .timer input {\r\n        color: var(--text-color);\r\n        background: none;\r\n        font-family: var(--global-font-family);\r\n        font-size: inherit;\r\n        font-weight: inherit;\r\n      }\r\n      .timer .time span.dots {\r\n\r\n      }\r\n      .timer .title {\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        color: var(--sub-text-color);\r\n        width: 100%;\r\n        padding: 5px 0;\r\n        text-align: center;\r\n      }\r\n      .timer .time .dots {\r\n        margin: -12px 2px 0px;\r\n      }\r\n      .timer .time .edit-field {\r\n        padding: 0 5px;\r\n      }\r\n      .edit-field br {\r\n        display: none;\r\n      }\r\n      .edit-field:not(:disabled):focus {\r\n        outline: none;\r\n        border-radius: var(--border-radius-lvl2);\r\n        background: var(--forground);\r\n        box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.1);\r\n      }\r\n    `;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.timer = null;\r\n    this.editing = false;\r\n    \r\n    window.addEventListener('statechange', async e => {\r\n      const state = await State.getState();\r\n      if(state.currentTimer) {\r\n        this.timer = await State.getTimerById(state.currentTimer);\r\n        this.update();\r\n      }\r\n    });\r\n\r\n    window.addEventListener('tick', e => {\r\n      if(!this.editing) {\r\n        this.update();\r\n      }\r\n    });\r\n\r\n    this.addEventListener('blur', e => {\r\n      this.saveTimer();\r\n    });\r\n  }\r\n    \r\n  deleteTimer() {\r\n    State.deleteTimer(this.timer.id);\r\n  }\r\n\r\n  editTimer() {\r\n    this.editing = true;\r\n    this.update();\r\n    const eles = this.shadowRoot.querySelectorAll('.edit-field');\r\n    eles[0].focus();\r\n  }\r\n\r\n  saveTimer() {\r\n    this.editing = false;\r\n    this.update();\r\n  }\r\n\r\n  playPauseTimer(timer) {\r\n    if(timer.state == 0) {  \r\n      State.startTimer(timer.id);\r\n    } else if(timer.state == 1) {\r\n      State.stopTimer(timer.id);\r\n    }\r\n  }\r\n\r\n  resetTimer(timer) {\r\n   State.resetTimer(timer.id); \r\n  }\r\n\r\n  updateTimer(timer, update) {\r\n    const title = update.title || timer.title;\r\n    const newSecs = update.seconds || Math.floor(timer.length / 1000) % 60;\r\n    const newMins = update.minutes || Math.floor(timer.length / 60 / 1000) % 60;\r\n    const newHours = update.hours || Math.floor(timer.length / 60 / 60 / 1000);\r\n\r\n    State.updateTimer(timer.id, {\r\n      title: title,\r\n      length: (\r\n        (newSecs * 1000) +\r\n        (newMins * 60 * 1000) +\r\n        (newHours * 60 * 60 * 1000)\r\n      )\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const timer = this.timer;\r\n\r\n    if(!timer) {\r\n      return html`\r\n        <div class=\"header\">\r\n          <div class=\"header-left\">\r\n            <button></button>\r\n          </div>\r\n          <div></div>\r\n          <div class=\"header-left\">\r\n            <button></button>\r\n          </div>\r\n        </div>\r\n        <div class=\"timer\"></div>\r\n        <div class=\"controls\"></div>\r\n      `;\r\n    }\r\n\r\n    let time = timer.length;\r\n\r\n    if(!this.editing) {\r\n      time = getTimerTime(timer);\r\n    }\r\n\r\n    const secs = Math.floor(time / 1000) % 60;\r\n    const mins = Math.floor(time / 60 / 1000) % 60;\r\n    const hours = Math.floor(time / 60 / 60 / 1000);\r\n\r\n    return html`\r\n      <div class=\"header\">\r\n        <div class=\"header-left\">\r\n          <button @click=\"${e => this.deleteTimer()}\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/></svg>\r\n          </button>\r\n        </div>\r\n        <div></div>\r\n        <div class=\"header-left\">\r\n          <button @click=\"${e => this.editTimer()}\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"/></svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"timer\">\r\n        <div class=\"time\">\r\n          <input class=\"edit-field\" \r\n            type=\"number\"\r\n            maxlength=\"2\"\r\n            ?disabled=\"${!this.editing}\"\r\n            @input=\"${e => this.updateTimer(timer, { hours: +e.target.value })}\"\r\n            .value=\"${hours.toString().padStart(2, \"0\")}\"/>\r\n          <span class=\"dots\">:</span>\r\n          <input class=\"edit-field\" \r\n            type=\"number\"\r\n            maxlength=\"2\"\r\n            ?disabled=\"${!this.editing}\"\r\n            @input=\"${e => this.updateTimer(timer, { minutes: +e.target.value })}\"\r\n            .value=\"${mins.toString().padStart(2, \"0\")}\"/>\r\n          <span class=\"dots\">:</span>\r\n          <input class=\"edit-field\" \r\n            type=\"number\"\r\n            maxlength=\"2\"\r\n            ?disabled=\"${!this.editing}\"\r\n            @input=\"${e => this.updateTimer(timer, { seconds: +e.target.value })}\"\r\n            .value=\"${secs.toString().padStart(2, \"0\")}\"/>\r\n        </div>\r\n        <input class=\"title edit-field\" \r\n          ?disabled=\"${!this.editing}\"\r\n          @input=\"${e => this.updateTimer(timer, { title: e.target.value })}\"\r\n          .value=\"${timer.title}\"/>\r\n        </div>\r\n      </div>\r\n      <div class=\"controls\">\r\n        <button class=\"big\" @click=\"${e => this.resetTimer(timer)}\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"89.869\" height=\"80.958\" viewBox=\"0 0 89.869 80.958\"><g transform=\"translate(-0.459 7.5)\"><path d=\"M33,65.958c20.531,0,33.369-18.831,33.369-33.368S53.115,0,33,0A32.591,32.591,0,0,0,0,32.589\" transform=\"translate(16.457)\" fill=\"none\" stroke=\"#fff\" stroke-width=\"15\"/><path d=\"M16,0,32,23H0Z\" transform=\"translate(32.459 54.735) rotate(180)\" fill=\"#fff\"/></g></svg>\r\n        </button>\r\n        <button class=\"big\" @click=\"${e => this.playPauseTimer(timer)}\">\r\n          ${timer.state === 1 ? \r\n            html`<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"fill:#fff\" width=\"55\" height=\"66\" viewBox=\"0 0 55 66\"><g transform=\"translate(-0.056 -0.219)\"><rect width=\"20\" height=\"66\" transform=\"translate(0.056 0.219)\"/><rect width=\"20\" height=\"66\" transform=\"translate(35.056 0.219)\"/></g></svg>` : \r\n            html`<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"fill:#fff\" width=\"50\" height=\"60\" viewBox=\"0 0 50 60\"><g transform=\"translate(-692.714 -1280.057)\"><path d=\"M0,0,50,30h0L0,60Z\" transform=\"translate(692.714 1280.057)\"/></g></svg>`}          \r\n        </button>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('app-timer', Timer);\r\n","import { LitElement, html, css } from 'lit-element';\r\nimport { getTimerTime, timeToString, timeToStringSeconds } from '../utils.js';\r\n\r\nclass TimerCard extends LitElement {\r\n\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        display: block;\r\n        padding: 15px;\r\n        border-radius: var(--border-radius-lvl2);\r\n        background: var(--forground);\r\n        height: 100px;\r\n        transition: box-shadow .05s ease-out;\r\n      }\r\n      :host(:active) {\r\n        box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.1);\r\n      }\r\n\r\n      .card-wrapper {\r\n        height: 100%;\r\n        display: grid;\r\n        grid-template-columns: 1fr auto;\r\n        grid-template-rows: 1fr auto;\r\n        grid-template-areas:\r\n            \"timer state\"\r\n            \"title none\";\r\n      }\r\n\r\n      .timer {\r\n        grid-area: timer;\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        color: var(--text-color);\r\n      }\r\n\r\n      .length {\r\n        font-size: 40px;\r\n      }\r\n\r\n      .current {\r\n        display: none; \r\n        font-weight: 500;\r\n        font-size: 40px;\r\n      }\r\n\r\n      :host([state=\"running\"]) .current {\r\n        display: block;\r\n      }\r\n\r\n      :host([state=\"running\"]) .length {\r\n        font-size: 18px;\r\n        font-weight: 100;\r\n        color: var(--sub-text-color);\r\n        margin-left: 2px;\r\n      }\r\n\r\n      .title {\r\n        grid-area: title;\r\n        color: var(--sub-text-color);\r\n        max-width: 100%;\r\n        white-space: nowrap;\r\n        text-overflow: ellipsis;\r\n        overflow: hidden;\r\n        font-size: 18px;\r\n      }\r\n\r\n      .state {\r\n        grid-area: state;\r\n      }\r\n\r\n      svg {\r\n        width: 24px;\r\n        height: 24px;\r\n        fill: var(--sub-text-color);\r\n      }\r\n    `;\r\n  }\r\n\r\n  get timer() {\r\n    return this._timer;\r\n  }\r\n\r\n  set timer(val) {\r\n    this._timer = val;\r\n\r\n    if(this._timer.state == 0 && this._timer.duration == 0) {\r\n      this.setAttribute('state', 'stopped');\r\n    } else if(this._timer.state == 1) {\r\n      this.setAttribute('state', 'running');\r\n    }\r\n\r\n    this.update();\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._timer = null;\r\n\r\n    window.addEventListener('tick', e => {\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const timer = this.timer;\r\n    const time = getTimerTime(timer);\r\n\r\n    return html`\r\n      <div class=\"card-wrapper\">\r\n        <div class=\"timer\">\r\n          <div class=\"length\">${timeToString(timer.length)}</div>\r\n          <div class=\"current\">${timeToString(time)}</div>\r\n        </div>\r\n        <div class=\"title\">${timer.title}</div>\r\n        <div class=\"state\">\r\n          ${timer.state === 0 ? \r\n            html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"55\" height=\"66\" viewBox=\"0 0 55 66\"><g transform=\"translate(-0.056 -0.219)\"><rect width=\"20\" height=\"66\" transform=\"translate(0.056 0.219)\"/><rect width=\"20\" height=\"66\" transform=\"translate(35.056 0.219)\"/></g></svg>` : \r\n            html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"60\" viewBox=\"0 0 50 60\"><g transform=\"translate(-692.714 -1280.057)\"><path d=\"M0,0,50,30h0L0,60Z\" transform=\"translate(692.714 1280.057)\"/></g></svg>`}          \r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('app-timer-card', TimerCard);\r\n","import { LitElement, html, css } from 'lit-element';\r\nimport State from '../State.js';\r\n\r\nclass TimerList extends LitElement {\r\n\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        display: block;\r\n        box-sizing: border-box;\r\n        height: 100%;\r\n        overflow: overlay;\r\n        padding: 85px 15px 0px;\r\n        overscroll-behavior-y: contain;\r\n      }\r\n      .timer-list {\r\n        display: grid;\r\n        grid-gap: 10px;\r\n      }\r\n      app-timer-card {\r\n        flex: none;\r\n      }\r\n    `;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.timers = [];\r\n\r\n    window.addEventListener('statechange', async e => {\r\n      const state = await State.getState();\r\n\r\n      const deletedTimers = [];\r\n      const addedTimers = [];\r\n\r\n      for(let timer of state.timers) {\r\n        const lokalTimer = this.timers.find(t => t.id === timer.id);\r\n        if(!lokalTimer) {\r\n          addedTimers.push(timer);\r\n        }\r\n      }\r\n      for(let timer of this.timers) {\r\n        const stateTimer = state.timers.find(t => t.id === timer.id);\r\n        if(!stateTimer) {\r\n          deletedTimers.push(timer);\r\n        }\r\n      }\r\n\r\n      this.timers = [...state.timers];\r\n      this.update();\r\n    });\r\n  }\r\n\r\n  async openTimer(timer) {\r\n    const state = await State.getState();\r\n    state.currentTimer = timer.id;\r\n    State.setState(state);\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"timer-list\">\r\n        ${this.timers.map(timer => {\r\n          return html`\r\n            <app-timer-card data-id=\"${timer.id}\"\r\n                            .timer=\"${timer}\"\r\n                            @click=\"${e => this.openTimer(timer)}\">\r\n            </app-timer-card>\r\n          `;\r\n        })}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ncustomElements.define('app-timer-list', TimerList);\r\n","import State from './State.js';\r\nimport './components/Timer.js';\r\nimport './components/TimerCard.js';\r\nimport './components/TimerList.js';\r\n\r\nwindow.addEventListener('DOMContentLoaded', init);\r\n\r\nlet mainElement;\r\n\r\nfunction toggleDrawer() {\r\n  if (mainElement.getAttribute('drawer') == \"open\") {\r\n    closeDrawer();\r\n  } else {\r\n    openDrawer();\r\n  }\r\n}\r\n\r\nasync function closeDrawer() {\r\n  mainElement.setAttribute('drawer', 'closed');\r\n  const state = await State.getState();\r\n  if(state.currentTimer) {\r\n    state.currentTimer = null;\r\n    State.setState(state);\r\n  }\r\n}\r\n\r\nfunction openDrawer() {\r\n  mainElement.setAttribute('drawer', 'open');\r\n}\r\n\r\nasync function init() {\r\n  mainElement = document.querySelector('main');\r\n\r\n  mainElement.querySelector('[toggle-drawer]')\r\n    .addEventListener('click', e => closeDrawer());\r\n\r\n  mainElement.querySelector('[create-timer]')\r\n    .addEventListener('click', e => State.createTimer());\r\n\r\n  window.addEventListener('statechange', async e => {\r\n    const state = await State.getState();\r\n    const currentTimer = await State.getTimerById(state.currentTimer);\r\n    if(currentTimer) {\r\n      openDrawer();\r\n    } else {\r\n      closeDrawer();\r\n    }\r\n  });\r\n\r\n  navigator.serviceWorker.register('./sw.js');\r\n}\r\n"]}